{"version":3,"file":"src_main_webapp_app_user_speech-data_speech-data_module_ts.js","mappings":"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","sources":["./src/main/webapp/app/user/speech-data/delete/speech-data-delete-dialog.component.ts","./src/main/webapp/app/user/speech-data/delete/speech-data-delete-dialog.component.html","./src/main/webapp/app/user/speech-data/detail/speech-data-detail.component.ts","./src/main/webapp/app/user/speech-data/detail/speech-data-detail.component.html","./src/main/webapp/app/user/speech-data/list/speech-data.component.ts","./src/main/webapp/app/user/speech-data/list/speech-data.component.html","./src/main/webapp/app/user/speech-data/speech-data.module.ts","./src/main/webapp/app/user/speech-data/speech-data.route.ts","./src/main/webapp/app/user/speech-data/update/speech-data-update.component.ts","./src/main/webapp/app/user/speech-data/update/speech-data-update.component.html"],"sourcesContent":["import {Component} from '@angular/core';\nimport {SpeechData} from \"../speech-data.model\";\nimport {SpeechDataService} from \"../service/speech-data.service\";\nimport {NgbActiveModal} from \"@ng-bootstrap/ng-bootstrap\";\n\n@Component({\n  selector: 'jhi-speech-data-delete-dialog',\n  templateUrl: './speech-data-delete-dialog.component.html'\n})\nexport class SpeechDataDeleteDialogComponent {\n  speechData?: SpeechData;\n\n  constructor(private speechDataService: SpeechDataService,\n              private activeModal: NgbActiveModal) {\n  }\n\n  cancel(): void {\n    this.activeModal.dismiss();\n  }\n\n  confirmDelete(id: string): void {\n    this.speechDataService.delete(id).subscribe(() => {\n      this.activeModal.close('deleted');\n    });\n  }\n}\n","<form *ngIf=\"speechData\" name=\"deleteForm\" (ngSubmit)=\"confirmDelete(speechData.id!)\">\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title\" jhiTranslate=\"entity.delete.title\">Confirm delete operation</h4>\n\n    <button type=\"button\" class=\"btn-close\" data-dismiss=\"modal\" aria-hidden=\"true\" (click)=\"cancel()\">&times;</button>\n  </div>\n\n  <div class=\"modal-body\">\n    <jhi-alert-error></jhi-alert-error>\n\n    <p jhiTranslate=\"userSpeechData.delete.question\" [translateValues]=\"{ id: speechData.id }\">\n      Are you sure you want to delete user {{ speechData.id }}?\n    </p>\n  </div>\n\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"cancel()\">\n      <fa-icon icon=\"ban\"></fa-icon>&nbsp;<span jhiTranslate=\"entity.action.cancel\">Cancel</span>\n    </button>\n\n    <button type=\"submit\" class=\"btn btn-danger\">\n      <fa-icon icon=\"times\"></fa-icon>&nbsp;<span jhiTranslate=\"entity.action.delete\">Delete</span>\n    </button>\n  </div>\n</form>\n","import {Component, OnInit} from '@angular/core';\nimport {SpeechDataDTO} from \"../speech-data.model\";\nimport {ActivatedRoute} from \"@angular/router\";\n\n@Component({\n  selector: 'jhi-speech-data-detail',\n  templateUrl: './speech-data-detail.component.html'\n})\nexport class SpeechDataDetailComponent implements OnInit {\n  speechData: SpeechDataDTO | null = null;\n  deviceAction? : string | null | undefined;\n\n  constructor(private route: ActivatedRoute) {\n  }\n\n  ngOnInit(): void {\n    this.route.data.subscribe(({speechData}) => {\n      this.speechData = speechData;\n      this.deviceAction = this.speechData?.deviceDTO?.deviceAction;\n    });\n  }\n\n}\n","<div class=\"d-flex justify-content-center\">\n  <div class=\"col-8\">\n    <div *ngIf=\"speechData\">\n      <h2>\n        <span jhiTranslate=\"userSpeechData.detail.title\">Device</span> [<strong>{{ speechData.messageRequest }}</strong\n      >]\n      </h2>\n\n      <dl class=\"row-md jh-entity-details\">\n        <dt><span jhiTranslate=\"userSpeechData.messageRequest\">Message request</span></dt>\n        <dd>\n          <span>{{ speechData.messageRequest }}</span>\n        </dd>\n\n        <dt><span jhiTranslate=\"userSpeechData.messageResponse\">Message response</span></dt>\n        <dd>{{speechData.messageResponse}}</dd>\n\n        <dt><span jhiTranslate=\"userSpeechData.deviceAction\">Device action</span></dt>\n        <dd>\n          {{deviceAction}}\n        </dd>\n\n        <dt><span jhiTranslate=\"userDevice.createdBy\">Created by</span></dt>\n        <dd>{{ speechData.createdBy }}</dd>\n\n        <dt><span jhiTranslate=\"userDevice.createdDate\">Created date</span></dt>\n        <dd>{{ speechData.createdDate | date: 'dd/MM/yy HH:mm' }}</dd>\n\n        <dt><span jhiTranslate=\"userDevice.lastModifiedBy\">Modified by</span></dt>\n        <dd>{{ speechData.lastModifiedBy }}</dd>\n\n        <dt><span jhiTranslate=\"userDevice.lastModifiedDate\">Modified date</span></dt>\n        <dd>{{ speechData.lastModifiedDate | date: 'dd/MM/yy HH:mm' }}</dd>\n      </dl>\n      <button type=\"submit\" routerLink=\"../../\" class=\"btn btn-info\">\n        <fa-icon icon=\"arrow-left\"></fa-icon>&nbsp;<span jhiTranslate=\"entity.action.back\">Back</span>\n      </button>\n\n    </div>\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {ITEMS_PER_PAGE} from \"../../../config/pagination.constants\";\nimport {ASC, DESC, SORT} from 'app/config/navigation.constants';\nimport {SpeechDataService} from \"../service/speech-data.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {HttpHeaders, HttpResponse} from \"@angular/common/http\";\nimport {ISpeechData, SpeechData} from \"../speech-data.model\";\nimport {combineLatest} from \"rxjs\";\nimport {User} from \"../../../admin/user-management/user-management.model\";\nimport {SpeechDataDeleteDialogComponent} from \"../delete/speech-data-delete-dialog.component\";\n\n@Component({\n  selector: 'jhi-speech-data',\n  templateUrl: './speech-data.component.html',\n})\nexport class SpeechDataComponent implements OnInit {\n  isLoading = false;\n  totalItems = 0;\n  itemsPerPage = ITEMS_PER_PAGE;\n  page!: number;\n  predicate!: string;\n  ascending!: boolean;\n  speechData: SpeechData[] | null = null;\n\n  constructor(private speechDataService: SpeechDataService,\n              private activatedRoute: ActivatedRoute,\n              private router: Router,\n              private modalService: NgbModal) {\n  }\n\n  ngOnInit(): void {\n    this.handleNavigation()\n  }\n\n  trackIdentity(_index: number, item: User): string {\n    return item.id!;\n  }\n\n  transition(): void {\n    this.router.navigate(['./'], {\n      relativeTo: this.activatedRoute.parent,\n      queryParams: {\n        page: this.page,\n        sort: `${this.predicate},${this.ascending ? ASC : DESC}`,\n      },\n    });\n  }\n\n  private handleNavigation(): void {\n    combineLatest([this.activatedRoute.data, this.activatedRoute.queryParamMap]).subscribe(([data, params]) => {\n      const page = params.get('page');\n      this.page = +(page ?? 1);\n      const sort = (params.get(SORT) ?? data['defaultSort']).split(',');\n      this.predicate = sort[0];\n      this.ascending = sort[1] === ASC;\n      this.loadAll();\n    });\n  }\n\n  loadAll(): void {\n    this.isLoading = true;\n    this.speechDataService.query({\n      page: this.page - 1,\n      size: this.itemsPerPage,\n      sort: this.sort(),\n    }).subscribe({\n      next: (res: HttpResponse<ISpeechData[]>) => {\n        this.isLoading = false;\n        this.onSuccess(res.body, res.headers);\n      },\n      error: () => (this.isLoading = false),\n    })\n  }\n\n  private onSuccess(speechData: SpeechData[] | null, headers: HttpHeaders): void {\n    this.totalItems = Number(headers.get('X-Total-Count'));\n    this.speechData = speechData;\n    console.log(speechData)\n  }\n\n  private sort(): string[] {\n    const result = [`${this.predicate},${this.ascending ? ASC : DESC}`];\n    if (this.predicate !== 'id') {\n      result.push('id');\n    }\n    return result;\n  }\n\n  deleteSpeechData(speechData: SpeechData): void {\n    const modalRef = this.modalService.open(SpeechDataDeleteDialogComponent, {size: 'lg', backdrop: 'static'});\n    modalRef.componentInstance.speechData = speechData;\n    // unsubscribe not needed because closed completes on modal close\n    modalRef.closed.subscribe(reason => {\n      if (reason === 'deleted') {\n        this.loadAll();\n      }\n    });\n  }\n}\n","<div>\n  <h2>\n    <span id=\"user-management-page-heading\" jhiTranslate=\"userSpeechData.home.title\" data-cy=\"userManagementPageHeading\">Users</span>\n\n    <div class=\"d-flex justify-content-end\">\n      <button class=\"btn btn-info me-2\" (click)=\"loadAll()\" [disabled]=\"isLoading\">\n        <fa-icon icon=\"sync\" [spin]=\"isLoading\"></fa-icon>\n        <span jhiTranslate=\"userSpeechData.home.refreshListLabel\">Refresh list</span>\n      </button>\n      <button class=\"btn btn-primary jh-create-entity\" [routerLink]=\"['./new']\">\n        <fa-icon icon=\"plus\"></fa-icon> <span jhiTranslate=\"userSpeechData.home.createLabel\">Create a new speech data</span>\n      </button>\n    </div>\n  </h2>\n\n  <jhi-alert-error></jhi-alert-error>\n\n  <jhi-alert></jhi-alert>\n\n  <div class=\"table-responsive\" *ngIf=\"speechData\">\n    <table class=\"table table-striped\" aria-describedby=\"user-management-page-heading\">\n      <thead>\n      <tr jhiSort [(predicate)]=\"predicate\" [(ascending)]=\"ascending\" (sortChange)=\"transition()\">\n        <th scope=\"col\" jhiSortBy=\"id\"><span jhiTranslate=\"global.field.id\">ID</span> <fa-icon icon=\"sort\"></fa-icon></th>\n        <th scope=\"col\" jhiSortBy=\"messageRequest\"><span jhiTranslate=\"userSpeechData.messageRequest\">Message request</span> <fa-icon icon=\"sort\"></fa-icon></th>\n        <th scope=\"col\" jhiSortBy=\"messageResponse\">\n          <span jhiTranslate=\"userSpeechData.messageResponse\">Message response</span> <fa-icon icon=\"sort\"></fa-icon>\n        </th>\n        <th scope=\"col\" jhiSortBy=\"createdBy\">\n          <span jhiTranslate=\"userSpeechData.createdBy\">Created By</span> <fa-icon icon=\"sort\"></fa-icon>\n        </th>\n        <th scope=\"col\" jhiSortBy=\"createdDate\">\n          <span jhiTranslate=\"userSpeechData.createdDate\">Created date</span> <fa-icon icon=\"sort\"></fa-icon>\n        </th>\n        <th scope=\"col\" jhiSortBy=\"lastModifiedBy\">\n          <span jhiTranslate=\"userSpeechData.lastModifiedBy\">Modified by</span> <fa-icon icon=\"sort\"></fa-icon>\n        </th>\n        <th scope=\"col\" jhiSortBy=\"lastModifiedDate\">\n          <span jhiTranslate=\"userSpeechData.lastModifiedDate\">Modified date</span> <fa-icon icon=\"sort\"></fa-icon>\n        </th>\n        <th scope=\"col\"></th>\n      </tr>\n      </thead>\n      <tbody *ngIf=\"speechData\">\n      <tr *ngFor=\"let sp of speechData; trackBy: trackIdentity\">\n        <td>\n          <a [routerLink]=\"['./', sp.id, 'view']\">{{ sp.id }}</a>\n        </td>\n        <td>{{ sp.messageRequest }}</td>\n        <td>{{ sp.messageResponse }}</td>\n        <td>{{ sp.createdBy }}</td>\n        <td>{{ sp.createdDate | date: 'dd/MM/yy HH:mm' }}</td>\n        <td>{{ sp.lastModifiedBy }}</td>\n        <td>{{ sp.lastModifiedDate | date: 'dd/MM/yy HH:mm' }}</td>\n        <td class=\"text-end\">\n          <div class=\"btn-group\">\n            <button type=\"submit\" [routerLink]=\"['./', sp.id, 'view']\" class=\"btn btn-info btn-sm\">\n              <fa-icon icon=\"eye\"></fa-icon>\n              <span class=\"d-none d-md-inline\" jhiTranslate=\"entity.action.view\">View</span>\n            </button>\n\n            <button type=\"submit\" [routerLink]=\"['./', sp.id, 'edit']\" queryParamsHandling=\"merge\" class=\"btn btn-primary btn-sm\">\n              <fa-icon icon=\"pencil-alt\"></fa-icon>\n              <span class=\"d-none d-md-inline\" jhiTranslate=\"entity.action.edit\">Edit</span>\n            </button>\n\n            <button\n              type=\"button\"\n              (click)=\"deleteSpeechData(sp)\"\n              class=\"btn btn-danger btn-sm\"\n            >\n              <fa-icon icon=\"times\"></fa-icon>\n              <span class=\"d-none d-md-inline\" jhiTranslate=\"entity.action.delete\">Delete</span>\n            </button>\n          </div>\n        </td>\n      </tr>\n      </tbody>\n    </table>\n  </div>\n\n  <div *ngIf=\"speechData\">\n    <div class=\"d-flex justify-content-center\">\n      <jhi-item-count [params]=\"{ page: page, totalItems: totalItems, itemsPerPage: itemsPerPage }\"></jhi-item-count>\n    </div>\n\n    <div class=\"d-flex justify-content-center\">\n      <ngb-pagination\n        [collectionSize]=\"totalItems\"\n        [(page)]=\"page\"\n        [pageSize]=\"itemsPerPage\"\n        [maxSize]=\"5\"\n        [rotate]=\"true\"\n        [boundaryLinks]=\"true\"\n        (pageChange)=\"transition()\"\n      ></ngb-pagination>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { SharedModule } from 'app/shared/shared.module';\nimport {speechDataRoute} from \"./speech-data.route\";\nimport { SpeechDataComponent } from './list/speech-data.component';\nimport { SpeechDataUpdateComponent } from './update/speech-data-update.component';\nimport { SpeechDataDeleteDialogComponent } from './delete/speech-data-delete-dialog.component';\nimport { SpeechDataDetailComponent } from './detail/speech-data-detail.component';\n\n@NgModule({\n  imports: [SharedModule, RouterModule.forChild(speechDataRoute)],\n  declarations: [\n    SpeechDataComponent,\n    SpeechDataUpdateComponent,\n    SpeechDataDeleteDialogComponent,\n    SpeechDataDetailComponent\n  ],\n})\nexport class SpeechDataModule {}\n","import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, Resolve, Routes} from '@angular/router';\nimport {Observable, of} from 'rxjs';\nimport {SpeechDataComponent} from \"./list/speech-data.component\";\nimport {ISpeechDataDTO} from \"./speech-data.model\";\nimport {SpeechDataService} from \"./service/speech-data.service\";\nimport {SpeechDataUpdateComponent} from \"./update/speech-data-update.component\";\nimport {SpeechDataDetailComponent} from \"./detail/speech-data-detail.component\";\n\n@Injectable({providedIn: 'root'})\nexport class SpeechDataResolve implements Resolve<ISpeechDataDTO | null> {\n  constructor(private service: SpeechDataService) {\n  }\n\n  resolve(route: ActivatedRouteSnapshot): Observable<ISpeechDataDTO | null> {\n    const id = route.params['id'];\n    if (id) {\n      return this.service.find(id);\n    }\n    return of(null);\n  }\n}\n\nexport const speechDataRoute: Routes = [\n  {\n    path: '',\n    component: SpeechDataComponent,\n    data: {\n      defaultSort: 'id,asc',\n    },\n  },\n  {\n    path: ':id/view',\n    component: SpeechDataDetailComponent,\n    resolve: {\n      speechData: SpeechDataResolve,\n    },\n  },\n  {\n    path: 'new',\n    component: SpeechDataUpdateComponent,\n    resolve: {\n      speechData: SpeechDataResolve,\n    },\n  },\n  {\n    path: ':id/edit',\n    component: SpeechDataUpdateComponent,\n    resolve: {\n      speechData: SpeechDataResolve,\n    },\n  },\n];\n","import {Component, OnInit} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {ISpeechDataDTO, SpeechDataDTO} from \"../speech-data.model\";\nimport {SpeechDataService} from \"../service/speech-data.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {DeviceService} from \"../../device/service/device.service\";\nimport {DEVICEACTION} from \"../../../config/device.constants\";\nimport {Device, DeviceDTO, IDevice, IDeviceDTO} from \"../../device/device.model\";\n\nconst speechDataTemplate = {} as ISpeechDataDTO;\n\n@Component({\n  selector: 'jhi-speech-data-update',\n  templateUrl: './speech-data-update.component.html'\n})\nexport class SpeechDataUpdateComponent implements OnInit {\n  isSaving = false;\n  deviceActions = DEVICEACTION;\n  devices: Device[] | null = null;\n  isCreating = false;\n\n  editForm = new FormGroup({\n    id: new FormControl(speechDataTemplate.id),\n    messageRequest: new FormControl(speechDataTemplate.messageRequest, {\n      nonNullable: true,\n      validators: [\n        Validators.required,\n        Validators.minLength(1),\n        Validators.maxLength(200)\n        // Validators.pattern('^[a-zA-Z0-9!$&*+=?^_`{|}~.-]+@[a-zA-Z0-9-]+(?:\\\\.[a-zA-Z0-9-]+)*$|^[_.@A-Za-z0-9-]+$'),\n      ],\n    }),\n    messageResponse: new FormControl(speechDataTemplate.messageResponse, {\n      nonNullable: true,\n      validators: [\n        Validators.required,\n        Validators.maxLength(100)\n      ]\n    }),\n    deviceId: new FormControl(\"Device\", {nonNullable: true}),\n    deviceAction: new FormControl(\"ON\", {nonNullable: true}),\n    deviceType: new FormControl(\"CONTROL\")\n  });\n\n  constructor(private speechDataService: SpeechDataService,\n              private deviceService: DeviceService,\n              private route: ActivatedRoute) {\n  }\n\n  ngOnInit(): void {\n    this.route.data.subscribe(({speechData}) => {\n      if (speechData) {\n        console.log(\"edit speechData\")\n        this.isCreating = false;\n        this.editForm.reset(speechData);\n      } else {\n        this.isCreating = true;\n        console.log(\"create new speechData\")\n        this.editForm.reset();\n      }\n    });\n    this.loadAll();\n  }\n\n  save(): void {\n    this.isSaving = true;\n    const speechData = this.editForm.getRawValue();\n    const deviceDTO: IDeviceDTO = new DeviceDTO(speechData.deviceId, \"CONTROL\", speechData.deviceAction);\n    const spData: ISpeechDataDTO = new SpeechDataDTO(\n      speechData.id,\n      speechData.messageRequest,\n      speechData.messageResponse,\n      null,\n      null,\n      null,\n      null,\n      deviceDTO\n    );\n    if (speechData.id !== null) {\n      this.speechDataService.update(speechData).subscribe({\n        next: () => this.onSaveSuccess(),\n        error: () => this.onSaveError()\n      });\n    } else {\n      this.speechDataService.create(spData).subscribe({\n        next: () => this.onSaveSuccess(),\n        error: () => this.onSaveError()\n      });\n    }\n  }\n\n  previousState(): void {\n    window.history.back();\n  }\n\n  private onSaveSuccess(): void {\n    this.isSaving = false;\n    this.previousState();\n  }\n\n  private onSaveError(): void {\n    this.isSaving = false;\n  }\n\n  loadAll(): void {\n    this.deviceService.queryDeviceAction(\"CONTROL\").subscribe({\n      next: (res: IDevice[]) => {\n        this.onSuccess(res);\n      }\n    })\n  }\n\n  private onSuccess(devices: Device[] | null): void {\n    this.devices = devices;\n    console.log(devices)\n  }\n}\n","<div class=\"d-flex justify-content-center\">\n  <div class=\"col-8\">\n    <form name=\"editForm\" role=\"form\" novalidate (ngSubmit)=\"save()\" [formGroup]=\"editForm\">\n      <h2 id=\"myUserLabel\" jhiTranslate=\"userSpeechData.home.createOrEditLabel\">Create or edit a speech data</h2>\n\n      <jhi-alert-error></jhi-alert-error>\n\n      <div class=\"mb-3\" [hidden]=\"!editForm.value.id\">\n        <label jhiTranslate=\"global.field.id\">ID</label>\n        <input type=\"text\" class=\"form-control\" name=\"id\" formControlName=\"id\" readonly />\n      </div>\n\n      <div class=\"mb-3\">\n        <label class=\"form-label\" jhiTranslate=\"userSpeechData.messageRequest\">Message request</label>\n        <input type=\"text\" class=\"form-control\" name=\"messageRequest\" formControlName=\"messageRequest\" />\n\n        <div *ngIf=\"editForm.get('messageRequest')!.invalid && (editForm.get('messageRequest')!.dirty || editForm.get('messageRequest')!.touched)\">\n          <small class=\"form-text text-danger\" *ngIf=\"editForm.get('messageRequest')?.errors?.required\" jhiTranslate=\"entity.validation.required\">\n            This field is required.\n          </small>\n\n          <small\n            class=\"form-text text-danger\"\n            *ngIf=\"editForm.get('messageRequest')?.errors?.maxlength\"\n            jhiTranslate=\"entity.validation.maxlength\"\n            [translateValues]=\"{ max: 100 }\"\n          >\n            This field cannot be longer than 100 characters.\n          </small>\n\n<!--          <small class=\"form-text text-danger\" *ngIf=\"editForm.get('messageRequest')?.errors?.pattern\" jhiTranslate=\"entity.validation.patternLogin\">-->\n<!--            This field can only contain letters, digits-->\n<!--          </small>-->\n        </div>\n      </div>\n\n      <div class=\"mb-3\">\n        <label jhiTranslate=\"userSpeechData.messageResponse\">Message response</label>\n        <input type=\"text\" class=\"form-control\" name=\"messageResponse\" formControlName=\"messageResponse\" />\n\n        <div *ngIf=\"editForm.get('messageResponse')!.invalid && (editForm.get('messageResponse')!.dirty || editForm.get('messageResponse')!.touched)\">\n          <small class=\"form-text text-danger\" *ngIf=\"editForm.get('messageResponse')?.errors?.required\" jhiTranslate=\"entity.validation.required\">\n            This field is required.\n          </small>\n\n          <small\n            class=\"form-text text-danger\"\n            *ngIf=\"editForm.get('messageResponse')?.errors?.maxlength\"\n            jhiTranslate=\"entity.validation.maxlength\"\n            [translateValues]=\"{ max: 100 }\"\n          >\n            This field cannot be longer than 100 characters.\n          </small>\n        </div>\n      </div>\n\n      <div class=\"mb-3\" *ngIf=\"devices && devices.length > 0 && isCreating\">\n        <laicbel jhiTranslate=\"userDevice.home.title\">Device</laicbel>\n        <select class=\"form-control\" id=\"deviceId\" name=\"deviceId\" formControlName=\"deviceId\">\n          <option *ngFor=\"let device of devices\" [value]=\"device.id\">{{ device.name }}</option>\n        </select>\n      </div>\n\n      <div class=\"mb-3\" [hidden]=\"true\">\n        <input type=\"text\" class=\"form-control\" name=\"deviceType\" formControlName=\"deviceType\" readonly />\n      </div>\n\n      <div class=\"mb-3\" *ngIf=\"deviceActions && deviceActions.length > 0 && isCreating\">\n        <laicbel jhiTranslate=\"userDevice.deviceAction\">Device type</laicbel>\n        <select class=\"form-control\" id=\"deviceAction\" name=\"deviceAction\" formControlName=\"deviceAction\">\n          <option *ngFor=\"let da of deviceActions\" [value]=\"da\">{{ da }}</option>\n        </select>\n      </div>\n\n      <button type=\"button\" class=\"btn btn-secondary\" (click)=\"previousState()\">\n        <fa-icon icon=\"ban\"></fa-icon>&nbsp;<span jhiTranslate=\"entity.action.cancel\">Cancel</span>\n      </button>\n\n      <button type=\"submit\" [disabled]=\"editForm.invalid || isSaving\" class=\"btn btn-primary\">\n        <fa-icon icon=\"save\"></fa-icon>&nbsp;<span jhiTranslate=\"entity.action.save\">Save</span>\n      </button>\n    </form>\n  </div>\n</div>\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}
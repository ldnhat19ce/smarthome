{"version":3,"file":"src_main_webapp_app_user_device_device_module_ts.js","mappings":"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","sources":["./src/main/webapp/app/user/device/delete/device-delete-dialog.component.ts","./src/main/webapp/app/user/device/delete/device-delete-dialog.component.html","./src/main/webapp/app/user/device/detail/device-detail.component.ts","./src/main/webapp/app/user/device/detail/device-detail.component.html","./src/main/webapp/app/user/device/device-notification.model.ts","./src/main/webapp/app/user/device/device-timer-delete/device-timer-delete.component.ts","./src/main/webapp/app/user/device/device-timer-delete/device-timer-delete.component.html","./src/main/webapp/app/user/device/device-timer.model.ts","./src/main/webapp/app/user/device/device.module.ts","./src/main/webapp/app/user/device/device.route.ts","./src/main/webapp/app/user/device/list/device.component.ts","./src/main/webapp/app/user/device/list/device.component.html","./src/main/webapp/app/user/device/notification-setting-delete/notification-setting-delete.component.ts","./src/main/webapp/app/user/device/notification-setting-delete/notification-setting-delete.component.html","./src/main/webapp/app/user/device/notification/device-notification.component.ts","./src/main/webapp/app/user/device/notification/device-notification.component.html","./src/main/webapp/app/user/device/service/device-firebase.service.ts","./src/main/webapp/app/user/device/service/device-monitor.service.ts","./src/main/webapp/app/user/device/service/device-notification.service.ts","./src/main/webapp/app/user/device/service/device-timer.service.ts","./src/main/webapp/app/user/device/timer/device-timer.component.ts","./src/main/webapp/app/user/device/timer/device-timer.component.html","./src/main/webapp/app/user/device/update/device-update.component.ts","./src/main/webapp/app/user/device/update/device-update.component.html"],"sourcesContent":["import {Component} from '@angular/core';\nimport {Device} from \"../device.model\";\nimport {DeviceService} from \"../service/device.service\";\nimport {NgbActiveModal} from \"@ng-bootstrap/ng-bootstrap\";\n\n@Component({\n  selector: 'jhi-device-delete-dialog',\n  templateUrl: './device-delete-dialog.component.html'\n})\nexport class DeviceDeleteDialogComponent {\n  device?: Device;\n\n  constructor(private deviceService: DeviceService,\n              private activeModal: NgbActiveModal) {\n  }\n\n  cancel(): void {\n    this.activeModal.dismiss();\n  }\n\n  confirmDelete(id: string): void {\n    this.deviceService.delete(id).subscribe(() => {\n      this.activeModal.close('deleted');\n    });\n  }\n}\n","<form *ngIf=\"device\" name=\"deleteForm\" (ngSubmit)=\"confirmDelete(device.id!)\">\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title\" jhiTranslate=\"entity.delete.title\">Confirm delete operation</h4>\n\n    <button type=\"button\" class=\"btn-close\" data-dismiss=\"modal\" aria-hidden=\"true\" (click)=\"cancel()\">&times;</button>\n  </div>\n\n  <div class=\"modal-body\">\n    <jhi-alert-error></jhi-alert-error>\n\n    <p jhiTranslate=\"userDevice.delete.question\" [translateValues]=\"{ id: device.id }\">\n      Are you sure you want to delete device {{ device.id }}?\n    </p>\n  </div>\n\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"cancel()\">\n      <fa-icon icon=\"ban\"></fa-icon>&nbsp;<span jhiTranslate=\"entity.action.cancel\">Cancel</span>\n    </button>\n\n    <button type=\"submit\" class=\"btn btn-danger\">\n      <fa-icon icon=\"times\"></fa-icon>&nbsp;<span jhiTranslate=\"entity.action.delete\">Delete</span>\n    </button>\n  </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\r\nimport { Device, IDevice } from '../device.model';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ITEMS_PER_PAGE } from '../../../config/pagination.constants';\r\nimport { DeviceMonitor, IDeviceMonitor } from '../device-monitor.model';\r\nimport { DeviceMonitorService } from '../service/device-monitor.service';\r\nimport { ASC, DESC, SORT } from '../../../config/navigation.constants';\r\nimport { HttpHeaders, HttpResponse } from '@angular/common/http';\r\nimport { combineLatest } from 'rxjs';\r\nimport { DeviceFirebaseService } from '../service/device-firebase.service';\r\nimport { DeviceService } from '../service/device.service';\r\nimport { Chart, registerables } from 'chart.js';\r\nimport { DeviceTimerService } from '../service/device-timer.service';\r\nimport { DeviceTimer, IDeviceTimer } from '../device-timer.model';\r\nimport { DeviceTimerDeleteComponent } from '../device-timer-delete/device-timer-delete.component';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'jhi-device-detail',\r\n  templateUrl: './device-detail.component.html',\r\n})\r\nexport class DeviceDetailComponent implements OnInit {\r\n  device: Device | null = null;\r\n  isLoading = false;\r\n  totalItems = 0;\r\n  itemsPerPage = ITEMS_PER_PAGE;\r\n  page!: number;\r\n  predicate!: string;\r\n  ascending!: boolean;\r\n  deviceMonitors: DeviceMonitor[] | null = null;\r\n  deviceTimers: DeviceTimer[] | null = null;\r\n  stateDevice!: string;\r\n  isStateLoading = false;\r\n  isDeviceControl = false;\r\n  listAllDeviceMonitors: DeviceMonitor[] | null = null;\r\n  values: number[] = [];\r\n  chart: any = [];\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private deviceMonitorService: DeviceMonitorService,\r\n    private router: Router,\r\n    private deviceFirebaseService: DeviceFirebaseService,\r\n    private deviceService: DeviceService,\r\n    private deviceTimerService: DeviceTimerService,\r\n    private modalService: NgbModal\r\n  ) {\r\n    Chart.register(...registerables);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRoute.data.subscribe(({ device }) => {\r\n      this.device = device;\r\n      if ('CONTROL' == this.device!!.deviceType) {\r\n        this.isDeviceControl = true;\r\n      }\r\n    });\r\n    this.handleNavigation();\r\n    this.loadAllDeviceMonitor();\r\n    if (this.device !== null && this.device?.deviceType == 'CONTROL') {\r\n      this.deviceFirebaseService\r\n        .getDeviceStateById()\r\n        .doc('device_action')\r\n        .collection(<string>this.device?.createdBy)\r\n        .doc(this.device.id!!)\r\n        .valueChanges()\r\n        .subscribe(data => {\r\n          this.stateDevice = data!!.action;\r\n          console.log(this.stateDevice);\r\n        });\r\n    }\r\n  }\r\n\r\n  onChangeStateDevice() {\r\n    this.isStateLoading = true;\r\n    if (this.device !== null) {\r\n      this.deviceService.updateStateDevice(this.device.id!!).subscribe(data => {\r\n        console.log(data);\r\n        this.isStateLoading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n  trackIdentity(_index: number, item: Device): string {\r\n    return item.id!;\r\n  }\r\n\r\n  transition(): void {\r\n    this.router.navigate(['./'], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: {\r\n        page: this.page,\r\n        sort: `${this.predicate},${this.ascending ? ASC : DESC}`,\r\n      },\r\n    });\r\n  }\r\n\r\n  private handleNavigation(): void {\r\n    combineLatest([this.activatedRoute.data, this.activatedRoute.queryParamMap]).subscribe(([data, params]) => {\r\n      const page = params.get('page');\r\n      this.page = +(page ?? 1);\r\n      const sort = (params.get(SORT) ?? data['defaultSort']).split(',');\r\n      this.predicate = sort[0];\r\n      this.ascending = sort[1] === ASC;\r\n      this.loadAll();\r\n    });\r\n  }\r\n\r\n  loadAll(): void {\r\n    if (this.device?.id !== null) {\r\n      this.isLoading = true;\r\n      if (this.device?.deviceType === 'MONITOR') {\r\n        this.deviceMonitorService\r\n          .query(\r\n            {\r\n              page: this.page - 1,\r\n              size: this.itemsPerPage,\r\n              sort: this.sort(),\r\n            },\r\n            this.device?.id\r\n          )\r\n          .subscribe({\r\n            next: (res: HttpResponse<IDeviceMonitor[]>) => {\r\n              this.isLoading = false;\r\n              this.onSuccess(res.body, res.headers);\r\n            },\r\n            error: () => (this.isLoading = false),\r\n          });\r\n      } else if (this.device?.deviceType === 'CONTROL') {\r\n        this.deviceTimerService\r\n          .query(\r\n            {\r\n              page: this.page - 1,\r\n              size: this.itemsPerPage,\r\n              sort: this.sort(),\r\n            },\r\n            this.device.id\r\n          )\r\n          .subscribe({\r\n            next: (res: HttpResponse<IDeviceTimer[]>) => {\r\n              this.isLoading = false;\r\n              this.onDeviceTimerSuccess(res.body, res.headers);\r\n            },\r\n            error: () => (this.isLoading = false),\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n  private onSuccess(deviceMonitors: DeviceMonitor[] | null, headers: HttpHeaders): void {\r\n    this.totalItems = Number(headers.get('X-Total-Count'));\r\n    this.deviceMonitors = deviceMonitors;\r\n    console.log(deviceMonitors);\r\n  }\r\n\r\n  private onDeviceTimerSuccess(deviceTimers: DeviceTimer[] | null, headers: HttpHeaders): void {\r\n    this.totalItems = Number(headers.get('X-Total-Count'));\r\n    this.deviceTimers = deviceTimers;\r\n  }\r\n\r\n  private sort(): string[] {\r\n    const result = [`${this.predicate},${this.ascending ? ASC : DESC}`];\r\n    if (this.predicate !== 'id') {\r\n      result.push('id');\r\n    }\r\n    return result;\r\n  }\r\n\r\n  private static sortByCreatedAt(): string[] {\r\n    return [`createdDate,${ASC}`];\r\n  }\r\n\r\n  loadAllDeviceMonitor() {\r\n    if (this.device?.id !== null && this.device?.deviceType === 'MONITOR') {\r\n      this.deviceMonitorService\r\n        .query(\r\n          {\r\n            page: 0,\r\n            size: Number.MAX_SAFE_INTEGER,\r\n            sort: DeviceDetailComponent.sortByCreatedAt(),\r\n          },\r\n          this.device?.id\r\n        )\r\n        .subscribe({\r\n          next: (res: HttpResponse<IDevice[]>) => {\r\n            this.listAllDeviceMonitors = res.body;\r\n            this.listAllDeviceMonitors?.map(data => {\r\n              return this.values?.push(Number(data.value));\r\n            });\r\n            this.chart = new Chart('canvas', {\r\n              type: 'line',\r\n              data: {\r\n                labels: this.values,\r\n                datasets: [\r\n                  {\r\n                    data: this.values,\r\n                    borderColor: '#3e95cd',\r\n                    fill: true,\r\n                    label: this.device?.name,\r\n                    backgroundColor: 'rgba(255,0,0,0.3)',\r\n                    borderWidth: 3,\r\n                    tension: 0.5,\r\n                  },\r\n                ],\r\n              },\r\n              options: {\r\n                responsive: false,\r\n                plugins: {\r\n                  legend: {\r\n                    display: true,\r\n                    labels: {\r\n                      color: 'rgb(255, 99, 132)',\r\n                    },\r\n                  },\r\n                },\r\n              },\r\n            });\r\n          },\r\n        });\r\n    }\r\n  }\r\n\r\n  deleteDeviceTimer(deviceTimer: DeviceTimer): void {\r\n    const modalRef = this.modalService.open(DeviceTimerDeleteComponent, { size: 'lg', backdrop: 'static' });\r\n    modalRef.componentInstance.deviceTimer = deviceTimer;\r\n    // unsubscribe not needed because closed completes on modal close\r\n    modalRef.closed.subscribe(reason => {\r\n      if (reason === 'deleted') {\r\n        this.loadAll();\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"d-flex justify-content-end\">\r\n  <div *ngIf=\"device && isDeviceControl\">\r\n    <button class=\"btn btn-primary jh-create-entity badge\" type=\"submit\" [routerLink]=\"['../../', device.id, 'timer']\">\r\n      <fa-icon icon=\"plus\"></fa-icon>\r\n      <span jhiTranslate=\"userDevice.timer.title\">Timer</span>\r\n    </button>\r\n  </div>\r\n  <div *ngIf=\"device && !isDeviceControl\">\r\n    <button class=\"btn btn-primary jh-create-entity badge\" type=\"submit\" [routerLink]=\"['../../', device.id, 'notification-setting']\">\r\n      <fa-icon icon=\"plus\"></fa-icon>\r\n      <span jhiTranslate=\"userNotificationSetting.home.title\">Notification setting</span>\r\n    </button>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"d-flex justify-content-center\">\r\n  <div class=\"col-8\">\r\n    <div *ngIf=\"device\">\r\n      <h2>\r\n        <span jhiTranslate=\"userDevice.detail.title\">Device</span> [<strong>{{ device.name }}</strong\r\n        >]\r\n      </h2>\r\n\r\n      <dl class=\"row-md jh-entity-details\">\r\n        <dt><span jhiTranslate=\"userDevice.name\">Name</span></dt>\r\n        <dd>\r\n          <span>{{ device.name }}</span>\r\n        </dd>\r\n\r\n        <dt><span jhiTranslate=\"userDevice.deviceType\">Device type</span></dt>\r\n        <dd>{{ device.deviceType }}</dd>\r\n\r\n        <dt *ngIf=\"isDeviceControl === true\">\r\n          <span jhiTranslate=\"userDevice.deviceAction\">Device action</span>\r\n        </dt>\r\n        <dd *ngIf=\"isDeviceControl === true\">\r\n          <span *ngIf=\"stateDevice == 'ON'\" class=\"badge bg-success\" jhiTranslate=\"userDevice.on\">ON</span>\r\n          <span *ngIf=\"stateDevice == 'OFF'\" class=\"badge bg-danger\" jhiTranslate=\"userDevice.off\">OFF</span>\r\n        </dd>\r\n\r\n        <dt><span jhiTranslate=\"userDevice.createdBy\">Created by</span></dt>\r\n        <dd>{{ device.createdBy }}</dd>\r\n\r\n        <dt><span jhiTranslate=\"userDevice.createdDate\">Created date</span></dt>\r\n        <dd>{{ device.createdDate | date: 'dd/MM/yy HH:mm' }}</dd>\r\n\r\n        <dt><span jhiTranslate=\"userDevice.lastModifiedBy\">Modified by</span></dt>\r\n        <dd>{{ device.lastModifiedBy }}</dd>\r\n\r\n        <dt><span jhiTranslate=\"userDevice.lastModifiedDate\">Modified date</span></dt>\r\n        <dd>{{ device.lastModifiedDate | date: 'dd/MM/yy HH:mm' }}</dd>\r\n      </dl>\r\n      <button type=\"submit\" routerLink=\"../../\" class=\"btn btn-info\">\r\n        <fa-icon icon=\"arrow-left\"></fa-icon>&nbsp;<span jhiTranslate=\"entity.action.back\">Back</span>\r\n      </button>\r\n\r\n      <ng-container *ngIf=\"isStateLoading == true\">\r\n        <button type=\"submit\" class=\"btn btn-danger\" *ngIf=\"stateDevice == 'ON'\" (click)=\"onChangeStateDevice()\" [disabled]=\"true\">\r\n          <span jhiTranslate=\"userDevice.turnOff\">Turn off</span>\r\n        </button>\r\n        <button type=\"submit\" class=\"btn btn-primary\" *ngIf=\"stateDevice == 'OFF'\" (click)=\"onChangeStateDevice()\" [disabled]=\"true\">\r\n          <span jhiTranslate=\"userDevice.turnOn\">Turn on</span>\r\n        </button>\r\n      </ng-container>\r\n\r\n      <ng-container *ngIf=\"isStateLoading == false\">\r\n        <button type=\"submit\" class=\"btn btn-danger\" *ngIf=\"stateDevice == 'ON'\" (click)=\"onChangeStateDevice()\" [disabled]=\"false\">\r\n          <span jhiTranslate=\"userDevice.turnOff\">Turn off</span>\r\n        </button>\r\n        <button type=\"submit\" class=\"btn btn-primary\" *ngIf=\"stateDevice == 'OFF'\" (click)=\"onChangeStateDevice()\" [disabled]=\"false\">\r\n          <span jhiTranslate=\"userDevice.turnOn\">Turn on</span>\r\n        </button>\r\n      </ng-container>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div>\r\n  <div class=\"table-responsive\" *ngIf=\"deviceMonitors\">\r\n    <table class=\"table table-striped\" aria-describedby=\"user-management-page-heading\">\r\n      <thead>\r\n        <tr jhiSort [(predicate)]=\"predicate\" [(ascending)]=\"ascending\" (sortChange)=\"transition()\">\r\n          <th scope=\"col\" jhiSortBy=\"id\">\r\n            <span jhiTranslate=\"global.field.id\">ID</span>\r\n            <fa-icon icon=\"sort\"></fa-icon>\r\n          </th>\r\n          <th scope=\"col\" jhiSortBy=\"value\">\r\n            <span jhiTranslate=\"userDeviceMonitor.value\">Value</span>\r\n            <fa-icon icon=\"sort\"></fa-icon>\r\n          </th>\r\n          <th scope=\"col\" jhiSortBy=\"unitMeasure\">\r\n            <span jhiTranslate=\"userDeviceMonitor.unitMeasure\">Unit measure</span>\r\n            <fa-icon icon=\"sort\"></fa-icon>\r\n          </th>\r\n          <th scope=\"col\" jhiSortBy=\"createdBy\">\r\n            <span jhiTranslate=\"userDeviceMonitor.createdBy\">Created By</span>\r\n            <fa-icon icon=\"sort\"></fa-icon>\r\n          </th>\r\n          <th scope=\"col\" jhiSortBy=\"createdDate\">\r\n            <span jhiTranslate=\"userDeviceMonitor.createdDate\">Created date</span>\r\n            <fa-icon icon=\"sort\"></fa-icon>\r\n          </th>\r\n          <th scope=\"col\" jhiSortBy=\"lastModifiedBy\">\r\n            <span jhiTranslate=\"userDeviceMonitor.lastModifiedBy\">Modified by</span>\r\n            <fa-icon icon=\"sort\"></fa-icon>\r\n          </th>\r\n          <th scope=\"col\" jhiSortBy=\"lastModifiedDate\">\r\n            <span jhiTranslate=\"userDeviceMonitor.lastModifiedDate\">Modified date</span>\r\n            <fa-icon icon=\"sort\"></fa-icon>\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody *ngIf=\"deviceMonitors\">\r\n        <tr *ngFor=\"let deviceMonitor of deviceMonitors; trackBy: trackIdentity\">\r\n          <td>\r\n            {{ deviceMonitor.id }}\r\n          </td>\r\n          <td>{{ deviceMonitor.value }}</td>\r\n          <td>{{ deviceMonitor.unitMeasure }}</td>\r\n          <td>{{ deviceMonitor.createdBy }}</td>\r\n          <td>{{ deviceMonitor.createdDate | date: 'dd/MM/yy HH:mm' }}</td>\r\n          <td>{{ deviceMonitor.lastModifiedBy }}</td>\r\n          <td>{{ deviceMonitor.lastModifiedDate | date: 'dd/MM/yy HH:mm' }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n\r\n  <div *ngIf=\"deviceMonitors\">\r\n    <div class=\"d-flex justify-content-center\">\r\n      <jhi-item-count [params]=\"{ page: page, totalItems: totalItems, itemsPerPage: itemsPerPage }\"></jhi-item-count>\r\n    </div>\r\n\r\n    <div class=\"d-flex justify-content-center\">\r\n      <ngb-pagination\r\n        [collectionSize]=\"totalItems\"\r\n        [(page)]=\"page\"\r\n        [pageSize]=\"itemsPerPage\"\r\n        [maxSize]=\"5\"\r\n        [rotate]=\"true\"\r\n        [boundaryLinks]=\"true\"\r\n        (pageChange)=\"transition()\"\r\n      ></ngb-pagination>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div>\r\n  <div class=\"table-responsive\" *ngIf=\"deviceTimers\">\r\n    <table class=\"table table-striped\" aria-describedby=\"user-management-page-heading\">\r\n      <thead>\r\n        <tr jhiSort [(predicate)]=\"predicate\" [(ascending)]=\"ascending\" (sortChange)=\"transition()\">\r\n          <th scope=\"col\" jhiSortBy=\"id\">\r\n            <span jhiTranslate=\"global.field.id\">ID</span>\r\n            <fa-icon icon=\"sort\"></fa-icon>\r\n          </th>\r\n          <th scope=\"col\" jhiSortBy=\"startTime\">\r\n            <span jhiTranslate=\"userDevice.timer.startTime\">Start time</span>\r\n            <fa-icon icon=\"sort\"></fa-icon>\r\n          </th>\r\n          <th scope=\"col\" jhiSortBy=\"endTime\">\r\n            <span jhiTranslate=\"userDevice.timer.endTime\">End time</span>\r\n            <fa-icon icon=\"sort\"></fa-icon>\r\n          </th>\r\n          <th scope=\"col\" jhiSortBy=\"deviceAction\">\r\n            <span jhiTranslate=\"userDevice.timer.deviceAction\">Action</span>\r\n            <fa-icon icon=\"sort\"></fa-icon>\r\n          </th>\r\n          <th scope=\"col\"></th>\r\n        </tr>\r\n      </thead>\r\n      <tbody *ngIf=\"deviceTimers\">\r\n        <tr *ngFor=\"let deviceTimer of deviceTimers; trackBy: trackIdentity\">\r\n          <td>\r\n            {{ deviceTimer.id }}\r\n          </td>\r\n          <td>{{ deviceTimer.startTime | date: 'dd/MM/yy HH:mm' }}</td>\r\n          <td>{{ deviceTimer.endTime | date: 'dd/MM/yy HH:mm' }}</td>\r\n          <td>{{ deviceTimer.deviceAction }}</td>\r\n          <td class=\"text-end\">\r\n            <div class=\"btn-group\">\r\n              <button type=\"button\" (click)=\"deleteDeviceTimer(deviceTimer)\" class=\"btn btn-danger btn-sm\">\r\n                <fa-icon icon=\"times\"></fa-icon>\r\n                <span class=\"d-none d-md-inline\" jhiTranslate=\"entity.action.delete\">Delete</span>\r\n              </button>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n\r\n  <div *ngIf=\"deviceTimers\">\r\n    <div class=\"d-flex justify-content-center\">\r\n      <jhi-item-count [params]=\"{ page: page, totalItems: totalItems, itemsPerPage: itemsPerPage }\"></jhi-item-count>\r\n    </div>\r\n\r\n    <div class=\"d-flex justify-content-center\">\r\n      <ngb-pagination\r\n        [collectionSize]=\"totalItems\"\r\n        [(page)]=\"page\"\r\n        [pageSize]=\"itemsPerPage\"\r\n        [maxSize]=\"5\"\r\n        [rotate]=\"true\"\r\n        [boundaryLinks]=\"true\"\r\n        (pageChange)=\"transition()\"\r\n      ></ngb-pagination>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div>\r\n  <div style=\"display: block\">\r\n    <canvas id=\"canvas\" width=\"800\" height=\"400\">\r\n      {{ chart }}\r\n    </canvas>\r\n  </div>\r\n</div>\r\n<!--[type]=\"'line'\"-->\r\n<!--[datasets]=\"chartData\"-->\r\n<!--[labels]=\"chartLabels\"-->\r\n<!--[options]=\"lineChartOptions\"-->\r\n<!--[legend]=\"lineChartLegend\"-->\r\n","import { DeviceDTO } from './device.model';\r\n\r\nexport interface INotificationSetting {\r\n  id: string | null;\r\n  value?: string | null;\r\n  title?: string | null;\r\n  message?: string | null;\r\n  deviceDTO?: DeviceDTO | null;\r\n  deviceAction?: string;\r\n  createdBy?: string;\r\n  createdDate?: Date;\r\n  lastModifiedBy?: string;\r\n  lastModifiedDate?: Date;\r\n}\r\n\r\nexport class NotificationSetting implements INotificationSetting {\r\n  constructor(\r\n    public id: string | null,\r\n    public value?: string | null,\r\n    public title?: string | null,\r\n    public message?: string | null,\r\n    public deviceDTO?: DeviceDTO | null,\r\n    public deviceAction?: string,\r\n    public createdBy?: string,\r\n    public createdDate?: Date,\r\n    public lastModifiedBy?: string,\r\n    public lastModifiedDate?: Date\r\n  ) {}\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { DeviceTimer } from '../device-timer.model';\r\nimport { DeviceTimerService } from '../service/device-timer.service';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'jhi-device-timer-delete',\r\n  templateUrl: './device-timer-delete.component.html',\r\n  styleUrls: ['./device-timer-delete.component.scss'],\r\n})\r\nexport class DeviceTimerDeleteComponent {\r\n  deviceTimer?: DeviceTimer;\r\n\r\n  constructor(private deviceTimerService: DeviceTimerService, private activeModal: NgbActiveModal) {}\r\n\r\n  cancel(): void {\r\n    this.activeModal.dismiss();\r\n  }\r\n\r\n  confirmDelete(id: string): void {\r\n    this.deviceTimerService.delete(id).subscribe(() => {\r\n      this.activeModal.close('deleted');\r\n    });\r\n  }\r\n}\r\n","<form *ngIf=\"deviceTimer\" name=\"deleteForm\" (ngSubmit)=\"confirmDelete(deviceTimer.id!)\">\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\" jhiTranslate=\"entity.delete.title\">Confirm delete operation</h4>\r\n\r\n    <button type=\"button\" class=\"btn-close\" data-dismiss=\"modal\" aria-hidden=\"true\" (click)=\"cancel()\">&times;</button>\r\n  </div>\r\n\r\n  <div class=\"modal-body\">\r\n    <jhi-alert-error></jhi-alert-error>\r\n\r\n    <p jhiTranslate=\"userDeviceTimer.delete.question\" [translateValues]=\"{ id: deviceTimer.id }\">\r\n      Are you sure you want to delete device timer {{ deviceTimer.id }}?\r\n    </p>\r\n  </div>\r\n\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"cancel()\">\r\n      <fa-icon icon=\"ban\"></fa-icon>&nbsp;<span jhiTranslate=\"entity.action.cancel\">Cancel</span>\r\n    </button>\r\n\r\n    <button type=\"submit\" class=\"btn btn-danger\">\r\n      <fa-icon icon=\"times\"></fa-icon>&nbsp;<span jhiTranslate=\"entity.action.delete\">Delete</span>\r\n    </button>\r\n  </div>\r\n</form>\r\n","import { DeviceDTO } from './device.model';\r\n\r\nexport interface IDeviceTimer {\r\n  id: string | null;\r\n  startTime?: Date | null;\r\n  endTime?: Date | null;\r\n  deviceDTO?: DeviceDTO | null;\r\n  deviceAction?: string;\r\n  createdBy?: string;\r\n  createdDate?: Date;\r\n  lastModifiedBy?: string;\r\n  lastModifiedDate?: Date;\r\n}\r\n\r\nexport class DeviceTimer implements IDeviceTimer {\r\n  constructor(\r\n    public id: string | null,\r\n    public startTime?: Date | null,\r\n    public endTime?: Date | null,\r\n    public deviceDTO?: DeviceDTO | null,\r\n    public deviceAction?: string,\r\n    public createdBy?: string,\r\n    public createdDate?: Date,\r\n    public lastModifiedBy?: string,\r\n    public lastModifiedDate?: Date\r\n  ) {}\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { deviceRoute } from './device.route';\r\nimport { DeviceComponent } from './list/device.component';\r\nimport { DeviceUpdateComponent } from './update/device-update.component';\r\nimport { DeviceDeleteDialogComponent } from './delete/device-delete-dialog.component';\r\nimport { DeviceDetailComponent } from './detail/device-detail.component';\r\nimport { NgChartsModule } from 'ng2-charts';\r\nimport { OwlDateTimeModule, OwlNativeDateTimeModule } from 'ng-pick-datetime';\r\nimport { DeviceTimerComponent } from './timer/device-timer.component';\r\nimport { DeviceTimerDeleteComponent } from './device-timer-delete/device-timer-delete.component';\r\nimport { DeviceNotificationComponent } from './notification/device-notification.component';\r\nimport { NotificationSettingDeleteComponent } from './notification-setting-delete/notification-setting-delete.component';\r\n\r\n@NgModule({\r\n  imports: [SharedModule, RouterModule.forChild(deviceRoute), NgChartsModule, OwlDateTimeModule, OwlNativeDateTimeModule],\r\n  declarations: [\r\n    DeviceComponent,\r\n    DeviceUpdateComponent,\r\n    DeviceDeleteDialogComponent,\r\n    DeviceDetailComponent,\r\n    DeviceTimerComponent,\r\n    DeviceTimerDeleteComponent,\r\n    DeviceNotificationComponent,\r\n    NotificationSettingDeleteComponent,\r\n  ],\r\n})\r\nexport class DeviceModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve, Routes } from '@angular/router';\r\nimport { IDevice } from './device.model';\r\nimport { DeviceService } from './service/device.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { DeviceComponent } from './list/device.component';\r\nimport { DeviceUpdateComponent } from './update/device-update.component';\r\nimport { DeviceDetailComponent } from './detail/device-detail.component';\r\nimport { DeviceTimerComponent } from './timer/device-timer.component';\r\nimport { DeviceNotificationComponent } from './notification/device-notification.component';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class DeviceResolve implements Resolve<IDevice | null> {\r\n  constructor(private service: DeviceService) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<IDevice | null> {\r\n    const id = route.params['id'];\r\n    if (id) {\r\n      return this.service.find(id);\r\n    }\r\n    return of(null);\r\n  }\r\n}\r\n\r\nexport const deviceRoute: Routes = [\r\n  {\r\n    path: '',\r\n    component: DeviceComponent,\r\n    data: {\r\n      defaultSort: 'id,asc',\r\n    },\r\n  },\r\n  {\r\n    path: ':id/view',\r\n    component: DeviceDetailComponent,\r\n    resolve: {\r\n      device: DeviceResolve,\r\n    },\r\n    data: {\r\n      defaultSort: 'createdDate,desc',\r\n    },\r\n  },\r\n  {\r\n    path: 'new',\r\n    component: DeviceUpdateComponent,\r\n    resolve: {\r\n      device: DeviceResolve,\r\n    },\r\n  },\r\n  {\r\n    path: ':id/edit',\r\n    component: DeviceUpdateComponent,\r\n    resolve: {\r\n      device: DeviceResolve,\r\n    },\r\n  },\r\n  {\r\n    path: ':id/timer',\r\n    component: DeviceTimerComponent,\r\n    resolve: {\r\n      device: DeviceResolve,\r\n    },\r\n  },\r\n  {\r\n    path: ':id/notification-setting',\r\n    component: DeviceNotificationComponent,\r\n    resolve: {\r\n      device: DeviceResolve,\r\n    },\r\n    data: {\r\n      defaultSort: 'id,desc',\r\n    },\r\n  },\r\n];\r\n","import {Component, OnInit} from '@angular/core';\nimport {ITEMS_PER_PAGE} from \"../../../config/pagination.constants\";\nimport {Device, IDevice} from \"../device.model\";\nimport {DeviceService} from \"../service/device.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {combineLatest} from \"rxjs\";\nimport {ASC, DESC, SORT} from \"../../../config/navigation.constants\";\nimport {HttpHeaders, HttpResponse} from \"@angular/common/http\";\nimport {DeviceDeleteDialogComponent} from \"../delete/device-delete-dialog.component\";\n\n@Component({\n  selector: 'jhi-device',\n  templateUrl: './device.component.html'\n})\nexport class DeviceComponent implements OnInit {\n  isLoading = false;\n  totalItems = 0;\n  itemsPerPage = ITEMS_PER_PAGE;\n  page!: number;\n  predicate!: string;\n  ascending!: boolean;\n  devices: Device[] | null = null;\n\n\n  constructor(private deviceService: DeviceService,\n              private activatedRoute: ActivatedRoute,\n              private router: Router,\n              private modalService: NgbModal) {\n  }\n\n  ngOnInit(): void {\n    this.handleNavigation()\n  }\n\n  trackIdentity(_index: number, item: Device): string {\n    return item.id!;\n  }\n\n  transition(): void {\n    this.router.navigate(['./'], {\n      relativeTo: this.activatedRoute.parent,\n      queryParams: {\n        page: this.page,\n        sort: `${this.predicate},${this.ascending ? ASC : DESC}`,\n      },\n    });\n  }\n\n  private handleNavigation(): void {\n    combineLatest([this.activatedRoute.data, this.activatedRoute.queryParamMap]).subscribe(([data, params]) => {\n      const page = params.get('page');\n      this.page = +(page ?? 1);\n      const sort = (params.get(SORT) ?? data['defaultSort']).split(',');\n      this.predicate = sort[0];\n      this.ascending = sort[1] === ASC;\n      this.loadAll();\n    });\n  }\n\n  loadAll(): void {\n    this.isLoading = true;\n    this.deviceService.query({\n      page: this.page - 1,\n      size: this.itemsPerPage,\n      sort: this.sort(),\n    }).subscribe({\n      next: (res: HttpResponse<IDevice[]>) => {\n        this.isLoading = false;\n        this.onSuccess(res.body, res.headers);\n      },\n      error: () => (this.isLoading = false),\n    })\n  }\n\n  private onSuccess(devices: Device[] | null, headers: HttpHeaders): void {\n    this.totalItems = Number(headers.get('X-Total-Count'));\n    this.devices = devices\n    console.log(devices)\n  }\n\n  private sort(): string[] {\n    const result = [`${this.predicate},${this.ascending ? ASC : DESC}`];\n    if (this.predicate !== 'id') {\n      result.push('id');\n    }\n    return result;\n  }\n\n  deleteDevice(device : Device): void {\n    const modalRef = this.modalService.open(DeviceDeleteDialogComponent, {size: 'lg', backdrop: 'static'});\n    modalRef.componentInstance.device = device;\n    // unsubscribe not needed because closed completes on modal close\n    modalRef.closed.subscribe(reason => {\n      if (reason === 'deleted') {\n        this.loadAll();\n      }\n    });\n  }\n}\n","<div>\n  <h2>\n    <span id=\"user-management-page-heading\" jhiTranslate=\"userDevice.home.title\" data-cy=\"userManagementPageHeading\">Users</span>\n\n    <div class=\"d-flex justify-content-end\">\n      <button class=\"btn btn-info me-2\" (click)=\"loadAll()\" [disabled]=\"isLoading\">\n        <fa-icon icon=\"sync\" [spin]=\"isLoading\"></fa-icon>\n        <span jhiTranslate=\"userSpeechData.home.refreshListLabel\">Refresh list</span>\n      </button>\n      <button class=\"btn btn-primary jh-create-entity\" [routerLink]=\"['./new']\">\n        <fa-icon icon=\"plus\"></fa-icon> <span jhiTranslate=\"userDevice.home.createLabel\">Create a new device</span>\n      </button>\n    </div>\n  </h2>\n\n  <jhi-alert-error></jhi-alert-error>\n\n  <jhi-alert></jhi-alert>\n\n  <div class=\"table-responsive\" *ngIf=\"devices\">\n    <table class=\"table table-striped\" aria-describedby=\"user-management-page-heading\">\n      <thead>\n      <tr jhiSort [(predicate)]=\"predicate\" [(ascending)]=\"ascending\" (sortChange)=\"transition()\">\n        <th scope=\"col\" jhiSortBy=\"id\"><span jhiTranslate=\"global.field.id\">ID</span> <fa-icon icon=\"sort\"></fa-icon></th>\n        <th scope=\"col\" jhiSortBy=\"name\"><span jhiTranslate=\"userDevice.name\">Name</span> <fa-icon icon=\"sort\"></fa-icon></th>\n        <th scope=\"col\" jhiSortBy=\"deviceType\"><span jhiTranslate=\"userDevice.deviceType\">Device type</span> <fa-icon icon=\"sort\"></fa-icon></th>\n        <th scope=\"col\" jhiSortBy=\"deviceAction\">\n          <span jhiTranslate=\"userDevice.deviceAction\">Device action</span> <fa-icon icon=\"sort\"></fa-icon>\n        </th>\n        <th scope=\"col\" jhiSortBy=\"createdBy\">\n          <span jhiTranslate=\"userDevice.createdBy\">Created By</span> <fa-icon icon=\"sort\"></fa-icon>\n        </th>\n        <th scope=\"col\" jhiSortBy=\"createdDate\">\n          <span jhiTranslate=\"userDevice.createdDate\">Created date</span> <fa-icon icon=\"sort\"></fa-icon>\n        </th>\n        <th scope=\"col\" jhiSortBy=\"lastModifiedBy\">\n          <span jhiTranslate=\"userDevice.lastModifiedBy\">Modified by</span> <fa-icon icon=\"sort\"></fa-icon>\n        </th>\n        <th scope=\"col\" jhiSortBy=\"lastModifiedDate\">\n          <span jhiTranslate=\"userDevice.lastModifiedDate\">Modified date</span> <fa-icon icon=\"sort\"></fa-icon>\n        </th>\n        <th scope=\"col\"></th>\n      </tr>\n      </thead>\n      <tbody *ngIf=\"devices\">\n      <tr *ngFor=\"let device of devices; trackBy: trackIdentity\">\n        <td>\n          <a [routerLink]=\"['./', device.id, 'view']\">{{ device.id }}</a>\n        </td>\n        <td>{{ device.name }}</td>\n        <td>{{ device.deviceType }}</td>\n        <td>{{ device.deviceAction }}</td>\n        <td>{{ device.createdBy }}</td>\n        <td>{{ device.createdDate | date: 'dd/MM/yy HH:mm' }}</td>\n        <td>{{ device.lastModifiedBy }}</td>\n        <td>{{ device.lastModifiedDate | date: 'dd/MM/yy HH:mm' }}</td>\n        <td class=\"text-end\">\n          <div class=\"btn-group\">\n            <button type=\"submit\" [routerLink]=\"['./', device.id, 'view']\" class=\"btn btn-info btn-sm\">\n              <fa-icon icon=\"eye\"></fa-icon>\n              <span class=\"d-none d-md-inline\" jhiTranslate=\"entity.action.view\">View</span>\n            </button>\n\n            <button type=\"submit\" [routerLink]=\"['./', device.id, 'edit']\" queryParamsHandling=\"merge\" class=\"btn btn-primary btn-sm\">\n              <fa-icon icon=\"pencil-alt\"></fa-icon>\n              <span class=\"d-none d-md-inline\" jhiTranslate=\"entity.action.edit\">Edit</span>\n            </button>\n\n            <button\n              type=\"button\"\n              (click)=\"deleteDevice(device)\"\n              class=\"btn btn-danger btn-sm\"\n            >\n              <fa-icon icon=\"times\"></fa-icon>\n              <span class=\"d-none d-md-inline\" jhiTranslate=\"entity.action.delete\">Delete</span>\n            </button>\n          </div>\n        </td>\n      </tr>\n      </tbody>\n    </table>\n  </div>\n\n  <div *ngIf=\"devices\">\n    <div class=\"d-flex justify-content-center\">\n      <jhi-item-count [params]=\"{ page: page, totalItems: totalItems, itemsPerPage: itemsPerPage }\"></jhi-item-count>\n    </div>\n\n    <div class=\"d-flex justify-content-center\">\n      <ngb-pagination\n        [collectionSize]=\"totalItems\"\n        [(page)]=\"page\"\n        [pageSize]=\"itemsPerPage\"\n        [maxSize]=\"5\"\n        [rotate]=\"true\"\n        [boundaryLinks]=\"true\"\n        (pageChange)=\"transition()\"\n      ></ngb-pagination>\n    </div>\n  </div>\n</div>\n","import { Component } from '@angular/core';\r\nimport { NotificationSetting } from '../device-notification.model';\r\nimport { DeviceNotificationService } from '../service/device-notification.service';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'jhi-notification-setting-delete',\r\n  templateUrl: './notification-setting-delete.component.html',\r\n  styleUrls: ['./notification-setting-delete.component.scss'],\r\n})\r\nexport class NotificationSettingDeleteComponent {\r\n  notificationSetting?: NotificationSetting;\r\n\r\n  constructor(private deviceNotificationService: DeviceNotificationService, private activeModal: NgbActiveModal) {}\r\n\r\n  cancel(): void {\r\n    this.activeModal.dismiss();\r\n  }\r\n\r\n  confirmDelete(id: string): void {\r\n    this.deviceNotificationService.delete(id).subscribe(() => {\r\n      this.activeModal.close('deleted');\r\n    });\r\n  }\r\n}\r\n","<form *ngIf=\"notificationSetting\" name=\"deleteForm\" (ngSubmit)=\"confirmDelete(notificationSetting.id!)\">\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\" jhiTranslate=\"entity.delete.title\">Confirm delete operation</h4>\r\n\r\n    <button type=\"button\" class=\"btn-close\" data-dismiss=\"modal\" aria-hidden=\"true\" (click)=\"cancel()\">&times;</button>\r\n  </div>\r\n\r\n  <div class=\"modal-body\">\r\n    <jhi-alert-error></jhi-alert-error>\r\n\r\n    <p jhiTranslate=\"userDeviceTimer.delete.question\" [translateValues]=\"{ id: notificationSetting.id }\">\r\n      Are you sure you want to delete device timer {{ notificationSetting.id }}?\r\n    </p>\r\n  </div>\r\n\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"cancel()\">\r\n      <fa-icon icon=\"ban\"></fa-icon>&nbsp;<span jhiTranslate=\"entity.action.cancel\">Cancel</span>\r\n    </button>\r\n\r\n    <button type=\"submit\" class=\"btn btn-danger\">\r\n      <fa-icon icon=\"times\"></fa-icon>&nbsp;<span jhiTranslate=\"entity.action.delete\">Delete</span>\r\n    </button>\r\n  </div>\r\n</form>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { DeviceNotificationService } from '../service/device-notification.service';\r\nimport { Device, DeviceDTO, IDeviceDTO } from '../device.model';\r\nimport { INotificationSetting, NotificationSetting } from '../device-notification.model';\r\nimport { ITEMS_PER_PAGE } from '../../../config/pagination.constants';\r\nimport { ASC, DESC, SORT } from '../../../config/navigation.constants';\r\nimport { combineLatest } from 'rxjs';\r\nimport { HttpHeaders, HttpResponse } from '@angular/common/http';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NotificationSettingDeleteComponent } from '../notification-setting-delete/notification-setting-delete.component';\r\n\r\n@Component({\r\n  selector: 'jhi-device-notification',\r\n  templateUrl: './device-notification.component.html',\r\n  styleUrls: ['./device-notification.component.scss'],\r\n})\r\nexport class DeviceNotificationComponent implements OnInit {\r\n  isSaving = false;\r\n  device?: Device;\r\n  notificationSettings: NotificationSetting[] | null = null;\r\n  totalItems = 0;\r\n  itemsPerPage = ITEMS_PER_PAGE;\r\n  page!: number;\r\n  predicate!: string;\r\n  ascending!: boolean;\r\n  isLoading = false;\r\n\r\n  editForm = new FormGroup({\r\n    id: new FormControl(''),\r\n    value: new FormControl('', {\r\n      nonNullable: true,\r\n      validators: [\r\n        Validators.required,\r\n        Validators.pattern('^[a-zA-Z0-9!$&*+=?^_`{|}~.-]+@[a-zA-Z0-9-]+(?:\\\\.[a-zA-Z0-9-]+)*$|^[_.@A-Za-z0-9-]+$'),\r\n      ],\r\n    }),\r\n    title: new FormControl('', { nonNullable: true }),\r\n    message: new FormControl('', { nonNullable: true }),\r\n  });\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private deviceNotificationService: DeviceNotificationService,\r\n    private router: Router,\r\n    private modalService: NgbModal\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRoute.data.subscribe(({ device }) => {\r\n      this.device = device;\r\n    });\r\n    this.handleNavigation();\r\n  }\r\n\r\n  trackIdentity(_index: number, item: Device): string {\r\n    return item.id!;\r\n  }\r\n\r\n  transition(): void {\r\n    this.router.navigate(['./'], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: {\r\n        page: this.page,\r\n        sort: `${this.predicate},${this.ascending ? ASC : DESC}`,\r\n      },\r\n    });\r\n  }\r\n\r\n  save(): void {\r\n    this.isSaving = true;\r\n    const result = this.editForm.getRawValue();\r\n    const deviceDTO: IDeviceDTO = new DeviceDTO(this.device?.id!!, null, null);\r\n    const notificationSetting: INotificationSetting = new NotificationSetting(null, result.value, result.title, result.message, deviceDTO);\r\n    this.deviceNotificationService.create(notificationSetting).subscribe({\r\n      next: () => this.onSaveSuccess(),\r\n      error: () => this.onSaveError(),\r\n    });\r\n  }\r\n\r\n  previousState(): void {\r\n    window.history.back();\r\n  }\r\n\r\n  private onSaveSuccess(): void {\r\n    this.isSaving = false;\r\n    this.editForm.reset();\r\n    this.loadAll();\r\n  }\r\n\r\n  private onSaveError(): void {\r\n    this.isSaving = false;\r\n  }\r\n\r\n  private handleNavigation(): void {\r\n    combineLatest([this.activatedRoute.data, this.activatedRoute.queryParamMap]).subscribe(([data, params]) => {\r\n      const page = params.get('page');\r\n      this.page = +(page ?? 1);\r\n      const sort = (params.get(SORT) ?? data['defaultSort']).split(',');\r\n      this.predicate = sort[0];\r\n      this.ascending = sort[1] === ASC;\r\n      this.loadAll();\r\n    });\r\n  }\r\n\r\n  private sort(): string[] {\r\n    const result = [`${this.predicate},${this.ascending ? ASC : DESC}`];\r\n    if (this.predicate !== 'id') {\r\n      result.push('id');\r\n    }\r\n    return result;\r\n  }\r\n\r\n  loadAll(): void {\r\n    if (this.device?.id !== null) {\r\n      this.isLoading = true;\r\n      this.deviceNotificationService\r\n        .query(\r\n          {\r\n            page: this.page - 1,\r\n            size: this.itemsPerPage,\r\n            sort: this.sort(),\r\n          },\r\n          this.device?.id\r\n        )\r\n        .subscribe({\r\n          next: (res: HttpResponse<INotificationSetting[]>) => {\r\n            this.isLoading = false;\r\n            this.onSuccess(res.body, res.headers);\r\n          },\r\n          error: () => (this.isLoading = false),\r\n        });\r\n    }\r\n  }\r\n\r\n  private onSuccess(notificationSettings: NotificationSetting[] | null, headers: HttpHeaders): void {\r\n    this.totalItems = Number(headers.get('X-Total-Count'));\r\n    this.notificationSettings = notificationSettings;\r\n    // console.log(deviceMonitors);\r\n  }\r\n\r\n  deleteNotificationSetting(notificationSetting: NotificationSetting): void {\r\n    const modalRef = this.modalService.open(NotificationSettingDeleteComponent, { size: 'lg', backdrop: 'static' });\r\n    modalRef.componentInstance.notificationSetting = notificationSetting;\r\n    // unsubscribe not needed because closed completes on modal close\r\n    modalRef.closed.subscribe(reason => {\r\n      if (reason === 'deleted') {\r\n        this.loadAll();\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"d-flex justify-content-center\">\r\n  <div class=\"col-8\">\r\n    <form name=\"editForm\" role=\"form\" novalidate (ngSubmit)=\"save()\" [formGroup]=\"editForm\">\r\n      <h2 id=\"myUserLabel\" jhiTranslate=\"userNotificationSetting.home.createLabel\">Create or edit a notification setting</h2>\r\n\r\n      <jhi-alert-error></jhi-alert-error>\r\n\r\n      <jhi-alert></jhi-alert>\r\n\r\n      <div class=\"mb-3\" [hidden]=\"!editForm.value.id\">\r\n        <label jhiTranslate=\"global.field.id\">ID</label>\r\n        <input type=\"text\" class=\"form-control\" name=\"id\" formControlName=\"id\" readonly />\r\n      </div>\r\n\r\n      <div class=\"mb-3\">\r\n        <label class=\"form-label\" jhiTranslate=\"userNotificationSetting.value\">Value</label>\r\n        <input type=\"text\" class=\"form-control\" name=\"value\" formControlName=\"value\" />\r\n\r\n        <div *ngIf=\"editForm.get('value')!.invalid && (editForm.get('value')!.dirty || editForm.get('value')!.touched)\">\r\n          <small class=\"form-text text-danger\" *ngIf=\"editForm.get('value')?.errors?.required\" jhiTranslate=\"entity.validation.required\">\r\n            This field is required.\r\n          </small>\r\n\r\n          <small class=\"form-text text-danger\" *ngIf=\"editForm.get('value')?.errors?.pattern\" jhiTranslate=\"entity.validation.patternLogin\">\r\n            This field can only contain letters, digits\r\n          </small>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"mb-3\">\r\n        <label class=\"form-label\" jhiTranslate=\"userNotificationSetting.title\">Title</label>\r\n        <input type=\"text\" class=\"form-control\" name=\"title\" formControlName=\"title\" />\r\n\r\n        <div *ngIf=\"editForm.get('title')!.invalid && (editForm.get('title')!.dirty || editForm.get('title')!.touched)\">\r\n          <small class=\"form-text text-danger\" *ngIf=\"editForm.get('title')?.errors?.required\" jhiTranslate=\"entity.validation.required\">\r\n            This field is required.\r\n          </small>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"mb-3\">\r\n        <label class=\"form-label\" jhiTranslate=\"userNotificationSetting.message\">Message</label>\r\n        <input type=\"text\" class=\"form-control\" name=\"message\" formControlName=\"message\" />\r\n\r\n        <div *ngIf=\"editForm.get('message')!.invalid && (editForm.get('message')!.dirty || editForm.get('message')!.touched)\">\r\n          <small class=\"form-text text-danger\" *ngIf=\"editForm.get('message')?.errors?.required\" jhiTranslate=\"entity.validation.required\">\r\n            This field is required.\r\n          </small>\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"button\" class=\"btn btn-secondary\" routerLink=\"../view\">\r\n        <fa-icon icon=\"ban\"></fa-icon>&nbsp;<span jhiTranslate=\"entity.action.cancel\">Cancel</span>\r\n      </button>\r\n\r\n      <button type=\"submit\" [disabled]=\"editForm.invalid || isSaving\" class=\"btn btn-primary\">\r\n        <fa-icon icon=\"save\"></fa-icon>&nbsp;<span jhiTranslate=\"entity.action.save\">Save</span>\r\n      </button>\r\n    </form>\r\n  </div>\r\n</div>\r\n\r\n<div>\r\n  <div class=\"table-responsive\">\r\n    <table class=\"table table-striped\" aria-describedby=\"user-management-page-heading\">\r\n      <thead>\r\n        <tr jhiSort [(predicate)]=\"predicate\" [(ascending)]=\"ascending\" (sortChange)=\"transition()\">\r\n          <th scope=\"col\" jhiSortBy=\"id\">\r\n            <span jhiTranslate=\"global.field.id\">ID</span>\r\n            <fa-icon icon=\"sort\"></fa-icon>\r\n          </th>\r\n          <th scope=\"col\" jhiSortBy=\"title\">\r\n            <span jhiTranslate=\"userNotificationSetting.title\">title</span>\r\n            <fa-icon icon=\"sort\"></fa-icon>\r\n          </th>\r\n          <th scope=\"col\" jhiSortBy=\"message\">\r\n            <span jhiTranslate=\"userNotificationSetting.message\">message</span>\r\n            <fa-icon icon=\"sort\"></fa-icon>\r\n          </th>\r\n          <th scope=\"col\" jhiSortBy=\"value\">\r\n            <span jhiTranslate=\"userNotificationSetting.value\">value</span>\r\n            <fa-icon icon=\"sort\"></fa-icon>\r\n          </th>\r\n          <th scope=\"col\"></th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let notificationSetting of notificationSettings; trackBy: trackIdentity\">\r\n          <td>\r\n            {{ notificationSetting.id }}\r\n          </td>\r\n          <td>{{ notificationSetting.title }}</td>\r\n          <td>{{ notificationSetting.message }}</td>\r\n          <td>{{ notificationSetting.value }}</td>\r\n          <td class=\"text-end\">\r\n            <div class=\"btn-group\">\r\n              <button type=\"button\" (click)=\"deleteNotificationSetting(notificationSetting)\" class=\"btn btn-danger btn-sm\">\r\n                <fa-icon icon=\"times\"></fa-icon>\r\n                <span class=\"d-none d-md-inline\" jhiTranslate=\"entity.action.delete\">Delete</span>\r\n              </button>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n\r\n  <div>\r\n    <div class=\"d-flex justify-content-center\">\r\n      <jhi-item-count [params]=\"{ page: page, totalItems: totalItems, itemsPerPage: itemsPerPage }\"></jhi-item-count>\r\n    </div>\r\n\r\n    <div class=\"d-flex justify-content-center\">\r\n      <ngb-pagination\r\n        [collectionSize]=\"totalItems\"\r\n        [(page)]=\"page\"\r\n        [pageSize]=\"itemsPerPage\"\r\n        [maxSize]=\"5\"\r\n        [rotate]=\"true\"\r\n        [boundaryLinks]=\"true\"\r\n        (pageChange)=\"transition()\"\r\n      ></ngb-pagination>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\nimport {AngularFirestore, AngularFirestoreCollection} from \"@angular/fire/compat/firestore\";\nimport {Observable} from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DeviceFirebaseService {\n  private dbPath = '/develop';\n\n  constructor(private db : AngularFirestore) {\n  }\n\n  getDeviceStateById() : AngularFirestoreCollection<any[]> {\n    return this.db.collection(\"develop\");\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { ApplicationConfigService } from '../../../core/config/application-config.service';\r\nimport { Pagination } from '../../../core/request/request.model';\r\nimport { createRequestOption } from '../../../core/request/request-util';\r\nimport { Observable } from 'rxjs';\r\nimport { IDeviceMonitor } from '../device-monitor.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DeviceMonitorService {\r\n  private resourceUrl = this.applicationConfigService.getEndpointFor('api/device-monitor');\r\n\r\n  constructor(private http: HttpClient, private applicationConfigService: ApplicationConfigService) {}\r\n\r\n  query(req?: Pagination, deviceId?: String): Observable<HttpResponse<IDeviceMonitor[]>> {\r\n    let queryResourceUrl = this.resourceUrl + '/' + deviceId;\r\n    const options = createRequestOption(req);\r\n    return this.http.get<IDeviceMonitor[]>(queryResourceUrl, { params: options, observe: 'response' });\r\n  }\r\n\r\n  getAllDeviceMonitor(req?: Pagination, deviceId?: String): Observable<HttpResponse<IDeviceMonitor[]>> {\r\n    let queryResourceUrl = this.resourceUrl + '/' + deviceId;\r\n    const options = createRequestOption(req);\r\n    return this.http.get<IDeviceMonitor[]>(queryResourceUrl, { params: options, observe: 'response' });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { ApplicationConfigService } from '../../../core/config/application-config.service';\r\nimport { INotificationSetting } from '../device-notification.model';\r\nimport { Observable } from 'rxjs';\r\nimport { Pagination } from '../../../core/request/request.model';\r\nimport { createRequestOption } from '../../../core/request/request-util';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DeviceNotificationService {\r\n  private resourceUrl = this.applicationConfigService.getEndpointFor('api/notification-setting');\r\n\r\n  constructor(private http: HttpClient, private applicationConfigService: ApplicationConfigService) {}\r\n\r\n  create(notificationSetting: INotificationSetting): Observable<INotificationSetting> {\r\n    return this.http.post<INotificationSetting>(this.resourceUrl, notificationSetting);\r\n  }\r\n\r\n  query(req?: Pagination, deviceId?: String): Observable<HttpResponse<INotificationSetting[]>> {\r\n    let queryResourceUrl = this.resourceUrl + '/' + deviceId;\r\n    const options = createRequestOption(req);\r\n    return this.http.get<INotificationSetting[]>(queryResourceUrl, { params: options, observe: 'response' });\r\n  }\r\n\r\n  delete(id: string): Observable<{}> {\r\n    return this.http.delete(`${this.resourceUrl}/${id}`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { ApplicationConfigService } from '../../../core/config/application-config.service';\r\nimport { IDevice } from '../device.model';\r\nimport { IDeviceTimer } from '../device-timer.model';\r\nimport { Observable } from 'rxjs';\r\nimport { Pagination } from '../../../core/request/request.model';\r\nimport { createRequestOption } from '../../../core/request/request-util';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DeviceTimerService {\r\n  private resourceUrl = this.applicationConfigService.getEndpointFor('api/device-timer');\r\n\r\n  constructor(private http: HttpClient, private applicationConfigService: ApplicationConfigService) {}\r\n\r\n  create(deviceTimer: IDeviceTimer): Observable<IDeviceTimer> {\r\n    return this.http.post<IDeviceTimer>(this.resourceUrl, deviceTimer);\r\n  }\r\n\r\n  query(req?: Pagination, deviceId?: String): Observable<HttpResponse<IDeviceTimer[]>> {\r\n    let queryResourceUrl = this.resourceUrl + '/' + deviceId;\r\n    const options = createRequestOption(req);\r\n    return this.http.get<IDeviceTimer[]>(queryResourceUrl, { params: options, observe: 'response' });\r\n  }\r\n\r\n  delete(id: string): Observable<{}> {\r\n    return this.http.delete(`${this.resourceUrl}/${id}`);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Device, DeviceDTO, IDeviceDTO } from '../device.model';\r\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { DeviceTimerService } from '../service/device-timer.service';\r\nimport { DeviceTimer, IDeviceTimer } from '../device-timer.model';\r\nimport { DEVICEACTION } from '../../../config/device.constants';\r\n\r\n@Component({\r\n  selector: 'jhi-device-timer',\r\n  templateUrl: './device-timer.component.html',\r\n})\r\nexport class DeviceTimerComponent implements OnInit {\r\n  isSaving = false;\r\n  device?: Device;\r\n  deviceActions = DEVICEACTION;\r\n\r\n  form: FormGroup = this.formbuilder.group({\r\n    dateSingleStart: new FormControl(new Date()),\r\n    dateSingleEnd: new FormControl(new Date()),\r\n    deviceAction: new FormControl(this.deviceActions[0], { nonNullable: true }),\r\n  });\r\n\r\n  constructor(private formbuilder: FormBuilder, private activatedRoute: ActivatedRoute, private deviceTimerService: DeviceTimerService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRoute.data.subscribe(({ device }) => {\r\n      this.device = device;\r\n    });\r\n  }\r\n\r\n  save(): void {\r\n    this.isSaving = true;\r\n    const result = this.form.getRawValue();\r\n    const deviceDTO: IDeviceDTO = new DeviceDTO(this.device?.id!!, null, null);\r\n    const deviceTimer: IDeviceTimer = new DeviceTimer(null, result.dateSingleStart, result.dateSingleEnd, deviceDTO, result.deviceAction);\r\n    this.deviceTimerService.create(deviceTimer).subscribe({\r\n      next: () => this.onSaveSuccess(),\r\n      error: () => this.onSaveError(),\r\n    });\r\n  }\r\n\r\n  previousState(): void {\r\n    window.history.back();\r\n  }\r\n\r\n  reset() {\r\n    console.log(this.form.value);\r\n    this.form.reset({\r\n      eventName: '',\r\n      dateSingleStart: new FormControl(),\r\n      dateSingleEnd: new FormControl(),\r\n    });\r\n\r\n    console.log(this.form.value);\r\n  }\r\n\r\n  private onSaveSuccess(): void {\r\n    this.isSaving = false;\r\n    this.previousState();\r\n  }\r\n\r\n  private onSaveError(): void {\r\n    this.isSaving = false;\r\n  }\r\n}\r\n","<div class=\"d-flex justify-content-center\">\r\n  <div class=\"col-8\">\r\n    <form [formGroup]=\"form\" (ngSubmit)=\"save()\">\r\n      <jhi-alert-error></jhi-alert-error>\r\n\r\n      <label for=\"dateSingleStart\" jhiTranslate=\"userDevice.timer.startTime\">Start time</label>\r\n      <input\r\n        name=\"dateSingleStart\"\r\n        formControlName=\"dateSingleStart\"\r\n        [owlDateTime]=\"dateSingleStart\"\r\n        placeholder=\"YYYY-MM-DD\"\r\n        [owlDateTimeTrigger]=\"dateSingleStart\"\r\n        [readOnly]=\"true\"\r\n        class=\"form-control\"\r\n        [selectMode]=\"'single'\"\r\n        id=\"dateSingleStart\"\r\n      />\r\n\r\n      <owl-date-time [firstDayOfWeek]=\"1\" [pickerType]=\"'both'\" #dateSingleStart></owl-date-time>\r\n\r\n      <br />\r\n      <label for=\"dateSingleEnd\" jhiTranslate=\"userDevice.timer.endTime\">End time</label>\r\n      <input\r\n        name=\"dateSingleEnd\"\r\n        formControlName=\"dateSingleEnd\"\r\n        [owlDateTime]=\"dateSingleEnd\"\r\n        placeholder=\"YYYY-MM-DD\"\r\n        [owlDateTimeTrigger]=\"dateSingleEnd\"\r\n        class=\"form-control\"\r\n        [selectMode]=\"'single'\"\r\n        [readOnly]=\"true\"\r\n        id=\"dateSingleEnd\"\r\n      />\r\n\r\n      <owl-date-time [firstDayOfWeek]=\"1\" [pickerType]=\"'both'\" #dateSingleEnd></owl-date-time>\r\n      <br />\r\n      <div class=\"mb-3\" *ngIf=\"deviceActions && deviceActions.length > 0\">\r\n        <laicbel jhiTranslate=\"userDevice.deviceAction\">Device type</laicbel>\r\n        <select class=\"form-control\" id=\"deviceAction\" name=\"deviceAction\" formControlName=\"deviceAction\">\r\n          <option *ngFor=\"let da of deviceActions\" [value]=\"da\">{{ da }}</option>\r\n        </select>\r\n      </div>\r\n\r\n      <br />\r\n\r\n      <button type=\"button\" (click)=\"previousState()\" class=\"btn btn-info\">\r\n        <fa-icon icon=\"arrow-left\"></fa-icon>&nbsp;<span jhiTranslate=\"entity.action.back\">Back</span>\r\n      </button>\r\n\r\n      <button (click)=\"reset()\" class=\"btn btn-danger\" jhiTranslate=\"userDevice.timer.resetForm\">Reset form</button>\r\n\r\n      <button type=\"submit\" class=\"btn btn-primary\" jhiTranslate=\"userDevice.timer.save\" [disabled]=\"isSaving\">Save</button>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\nimport {IDevice} from \"../device.model\";\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {DeviceService} from \"../service/device.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {DEVICEACTION, DEVICETYPES} from 'app/config/device.constants';\n\nconst deviceTemplate = {} as IDevice;\n\n@Component({\n  selector: 'jhi-device-update',\n  templateUrl: './device-update.component.html'\n})\nexport class DeviceUpdateComponent implements OnInit {\n  isSaving = false;\n  deviceTypes = DEVICETYPES;\n  deviceActions = DEVICEACTION;\n  isCreating = false;\n\n  editForm = new FormGroup({\n    id: new FormControl(deviceTemplate.id),\n    name: new FormControl(deviceTemplate.name, {\n      nonNullable: true,\n      validators: [\n        Validators.required,\n        Validators.minLength(1),\n        Validators.maxLength(50),\n        Validators.pattern('^[a-zA-Z0-9!$&*+=?^_`{|}~.-]+@[a-zA-Z0-9-]+(?:\\\\.[a-zA-Z0-9-]+)*$|^[_.@A-Za-z0-9-]+$'),\n      ],\n    }),\n    deviceType: new FormControl(deviceTemplate.deviceType, {nonNullable: true}),\n    deviceAction: new FormControl(deviceTemplate.deviceAction, {nonNullable: true})\n  });\n\n  constructor(private deviceService : DeviceService,\n              private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.data.subscribe(({ device }) => {\n      if (device) {\n        console.log(\"edit device\")\n        console.log(device)\n        this.isCreating = false;\n        this.editForm.reset(device);\n      } else {\n        console.log(\"create new device\")\n        this.isCreating = true;\n        this.editForm.reset();\n      }\n    });\n  }\n\n  save(): void {\n    this.isSaving = true;\n    const device = this.editForm.getRawValue();\n    if (device.id !== null) {\n      this.deviceService.update(device).subscribe({\n        next: () => this.onSaveSuccess(),\n        error: () => this.onSaveError()\n      });\n    } else {\n      this.deviceService.create(device).subscribe({\n        next: () => this.onSaveSuccess(),\n        error: () => this.onSaveError()\n      });\n    }\n  }\n\n  previousState(): void {\n    window.history.back();\n  }\n\n  private onSaveSuccess(): void {\n    this.isSaving = false;\n    this.previousState();\n  }\n\n  private onSaveError(): void {\n    this.isSaving = false;\n  }\n}\n","<div class=\"d-flex justify-content-center\">\n  <div class=\"col-8\">\n    <form name=\"editForm\" role=\"form\" novalidate (ngSubmit)=\"save()\" [formGroup]=\"editForm\">\n      <h2 id=\"myUserLabel\" jhiTranslate=\"userDevice.home.createOrEditLabel\">Create or edit a device</h2>\n\n      <jhi-alert-error></jhi-alert-error>\n\n      <div class=\"mb-3\" [hidden]=\"!editForm.value.id\">\n        <label jhiTranslate=\"global.field.id\">ID</label>\n        <input type=\"text\" class=\"form-control\" name=\"id\" formControlName=\"id\" readonly />\n      </div>\n\n      <div class=\"mb-3\">\n        <label class=\"form-label\" jhiTranslate=\"userDevice.name\">Name</label>\n        <input type=\"text\" class=\"form-control\" name=\"name\" formControlName=\"name\" />\n\n        <div *ngIf=\"editForm.get('name')!.invalid && (editForm.get('name')!.dirty || editForm.get('name')!.touched)\">\n          <small class=\"form-text text-danger\" *ngIf=\"editForm.get('name')?.errors?.required\" jhiTranslate=\"entity.validation.required\">\n            This field is required.\n          </small>\n\n          <small\n            class=\"form-text text-danger\"\n            *ngIf=\"editForm.get('name')?.errors?.maxlength\"\n            jhiTranslate=\"entity.validation.maxlength\"\n            [translateValues]=\"{ max: 100 }\"\n          >\n            This field cannot be longer than 100 characters.\n          </small>\n\n          <small class=\"form-text text-danger\" *ngIf=\"editForm.get('name')?.errors?.pattern\" jhiTranslate=\"entity.validation.patternLogin\">\n            This field can only contain letters, digits\n          </small>\n        </div>\n      </div>\n\n      <div class=\"mb-3\" *ngIf=\"deviceTypes && deviceTypes.length > 0 && isCreating\">\n        <laicbel jhiTranslate=\"userDevice.deviceType\">Device type</laicbel>\n        <select class=\"form-control\" id=\"deviceType\" name=\"deviceType\" formControlName=\"deviceType\">\n          <option *ngFor=\"let dp of deviceTypes\" [value]=\"dp\">{{ dp }}</option>\n        </select>\n      </div>\n\n      <div class=\"mb-3\" *ngIf=\"deviceActions && deviceActions.length > 0 && isCreating\">\n        <laicbel jhiTranslate=\"userDevice.deviceAction\">Device type</laicbel>\n        <select class=\"form-control\" id=\"deviceAction\" name=\"deviceAction\" formControlName=\"deviceAction\">\n          <option *ngFor=\"let da of deviceActions\" [value]=\"da\">{{ da }}</option>\n        </select>\n      </div>\n\n      <button type=\"button\" class=\"btn btn-secondary\" (click)=\"previousState()\">\n        <fa-icon icon=\"ban\"></fa-icon>&nbsp;<span jhiTranslate=\"entity.action.cancel\">Cancel</span>\n      </button>\n\n      <button type=\"submit\" [disabled]=\"editForm.invalid || isSaving\" class=\"btn btn-primary\">\n        <fa-icon icon=\"save\"></fa-icon>&nbsp;<span jhiTranslate=\"entity.action.save\">Save</span>\n      </button>\n    </form>\n  </div>\n</div>\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}
{"version":3,"file":"src_main_webapp_app_login_login_module_ts.js","mappings":";;;;;;;;;;;;;AASO,MAAM,WAAW;IACtB,YACS,EAAiB,EACjB,KAAc,EACd,SAAkB,EAClB,WAAkB,EAClB,cAAuB,EACvB,gBAAuB;QALvB,OAAE,GAAF,EAAE,CAAe;QACjB,UAAK,GAAL,KAAK,CAAS;QACd,cAAS,GAAT,SAAS,CAAS;QAClB,gBAAW,GAAX,WAAW,CAAO;QAClB,mBAAc,GAAd,cAAc,CAAS;QACvB,qBAAgB,GAAhB,gBAAgB,CAAO;IAC7B,CAAC;CACL;;;;;;;;;;;;;;;;;;;;;ACTM,MAAM,kBAAkB;IAG7B,YAAoB,IAAgB,EAAU,wBAAkD;QAA5E,SAAI,GAAJ,IAAI,CAAY;QAAU,6BAAwB,GAAxB,wBAAwB,CAA0B;QAFxF,gBAAW,GAAG,IAAI,CAAC,wBAAwB,CAAC,cAAc,CAAC,kBAAkB,CAAC,CAAC;IAEY,CAAC;IAEpG,MAAM,CAAC,WAAyB;QAC9B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAe,IAAI,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;IACrE,CAAC;;oFAPU,kBAAkB;mHAAlB,kBAAkB,WAAlB,kBAAkB,mBAFjB,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;ACPoE;AACpB;AAOgB;;;;;;;;;;;;;ICJ9E,0EAAoI;IAClI;IAAA,yEAAQ;IAAA,6EAAkB;IAAA,4DAAS;IAAC,gHACtC;IAAA,4DAAM;;ADQL,MAAM,cAAc;IAYzB,YACU,cAA8B,EAC9B,YAA0B,EAC1B,MAAc,EACd,mBAAwC,EACxC,kBAAsC;QAJtC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,iBAAY,GAAZ,YAAY,CAAc;QAC1B,WAAM,GAAN,MAAM,CAAQ;QACd,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,uBAAkB,GAAlB,kBAAkB,CAAoB;QAbhD,wBAAmB,GAAG,KAAK,CAAC;QAE5B,cAAS,GAAG,IAAI,qDAAS,CAAC;YACxB,QAAQ,EAAE,IAAI,uDAAW,CAAC,EAAE,EAAE,EAAE,WAAW,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC,+DAAmB,CAAC,EAAE,CAAC;YACvF,QAAQ,EAAE,IAAI,uDAAW,CAAC,EAAE,EAAE,EAAE,WAAW,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC,+DAAmB,CAAC,EAAE,CAAC;YACvF,UAAU,EAAE,IAAI,uDAAW,CAAC,KAAK,EAAE,EAAE,WAAW,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC,+DAAmB,CAAC,EAAE,CAAC;SAC7F,CAAC,CAAC;IAQA,CAAC;IAEJ,QAAQ;QACN,sDAAsD;QACtD,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,GAAG,EAAE;YAC5C,IAAI,IAAI,CAAC,cAAc,CAAC,eAAe,EAAE,EAAE;gBACzC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aAC5B;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,eAAe;QACb,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;IACtC,CAAC;IAED,KAAK;QACH,MAAM,mBAAmB,GAAkB,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;QAE5F,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC,SAAS,CAAC;YAC9D,IAAI,EAAE,GAAG,EAAE;gBACT,MAAM,WAAW,GAAiB,IAAI,8EAAW,CAAC,IAAI,EAAE,mBAAqB,CAAC,CAAC;gBAC/E,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC;oBACpD,IAAI,EAAE,GAAG,EAAE;wBACT,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;oBAC9B,CAAC;iBACF,CAAC,CAAC;gBACH,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;gBACjC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE,EAAE;oBACvC,qEAAqE;oBACrE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;iBAC5B;YACH,CAAC;YACD,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;SAC/C,CAAC,CAAC;IACL,CAAC;;4EApDU,cAAc;4GAAd,cAAc;;;;;;QCd3B,sEAAK;QACH;QAAA,yEAA2C;QACzC;QAAA,yEAAyC;QACvC;QAAA,wEAAoD;QAAA,kEAAO;QAAA,4DAAK;QAChE;QAAA,0GAEM;QACN;QAAA,2EAA4E;QAA7C,2IAAY,WAAO,IAAC;QACjD;QAAA,0EAAkB;QAChB;QAAA,4EAAuF;QAAA,oEAAQ;QAAA,4DAAQ;QACvG;QAAA,0EASE;;QACJ;QAAA,4DAAM;QAEN;QAAA,0EAAkB;QAChB;QAAA,4EAAyD;QAAA,oEAAQ;QAAA,4DAAQ;QACzE;QAAA,wEAQE;;QACJ;QAAA,4DAAM;QAEN;QAAA,2EAAwB;QACtB;QAAA,6EAAiD;QAC/C;QAAA,wEAAiH;QACjH;QAAA,4EAA2C;QAAA,uEAAW;QAAA,4DAAO;QAC/D;QAAA,4DAAQ;QACV;QAAA,4DAAM;QAEN;QAAA,8EAAgG;QAAA,mEAAO;QAAA,4DAAS;QAClH;QAAA,4DAAO;QACP;QAAA,2EAAsC;QACpC;QAAA,yEACG;QAAA,yFAA6B;QAAA,4DAC/B;QACH;QAAA,4DAAM;QAEN;QAAA,2EAAiC;QAC/B;QAAA,4EAA6D;QAAA,0FAA8B;QAAA,4DAAO;QAClG;QAAA,yEAAuG;QAAA,kFAAsB;QAAA,4DAAI;QACnI;QAAA,4DAAM;QACR;QAAA,4DAAM;QACR;QAAA,4DAAM;QACR;QAAA,4DAAM;QACN;;QArDuC,0DAAyB;QAAzB,yFAAyB;QAGN,0DAAuB;QAAvB,oFAAuB;QAQrE,0DAAkE;QAAlE,wLAAkE;QAclE,2DAAiE;QAAjE,uLAAiE;;;;;;;;;;;;;;;;;;;;;AC5B9B;AAES;AACZ;AACO;;;AAM5C,MAAM,WAAW;;sEAAX,WAAW;wGAAX,WAAW;4GAHZ,kEAAY,EAAE,kEAAqB,CAAC,CAAC,qDAAW,CAAC,CAAC;mIAGjD,WAAW,mBAFP,4DAAc,aADnB,kEAAY,EAAE;;;;;;;;;;;;;;;;ACNyB;AAE5C,MAAM,WAAW,GAAU;IAChC,IAAI,EAAE,EAAE;IACR,SAAS,EAAE,4DAAc;IACzB,IAAI,EAAE;QACJ,SAAS,EAAE,aAAa;KACzB;CACF,CAAC","sources":["./src/main/webapp/app/core/device-token/device-token.model.ts","./src/main/webapp/app/core/device-token/device-token.service.ts","./src/main/webapp/app/login/login.component.ts","./src/main/webapp/app/login/login.component.html","./src/main/webapp/app/login/login.module.ts","./src/main/webapp/app/login/login.route.ts"],"sourcesContent":["export interface IDeviceToken {\r\n  id: string | null;\r\n  token?: string;\r\n  createdBy?: string;\r\n  createdDate?: Date;\r\n  lastModifiedBy?: string;\r\n  lastModifiedDate?: Date;\r\n}\r\n\r\nexport class DeviceToken implements IDeviceToken {\r\n  constructor(\r\n    public id: string | null,\r\n    public token?: string,\r\n    public createdBy?: string,\r\n    public createdDate?: Date,\r\n    public lastModifiedBy?: string,\r\n    public lastModifiedDate?: Date\r\n  ) {}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ApplicationConfigService } from '../config/application-config.service';\r\nimport { IDeviceToken } from './device-token.model';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DeviceTokenService {\r\n  private resourceUrl = this.applicationConfigService.getEndpointFor('api/device-token');\r\n\r\n  constructor(private http: HttpClient, private applicationConfigService: ApplicationConfigService) {}\r\n\r\n  create(deviceToken: IDeviceToken): Observable<IDeviceToken> {\r\n    return this.http.post<IDeviceToken>(this.resourceUrl, deviceToken);\r\n  }\r\n}\r\n","import { AfterViewInit, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { LoginService } from 'app/login/login.service';\r\nimport { AccountService } from 'app/core/auth/account.service';\r\nimport { LocalStorageService } from 'ngx-webstorage';\r\nimport { DeviceTokenService } from '../core/device-token/device-token.service';\r\nimport { DeviceToken, IDeviceToken } from '../core/device-token/device-token.model';\r\n\r\n@Component({\r\n  selector: 'jhi-login',\r\n  templateUrl: './login.component.html',\r\n})\r\nexport class LoginComponent implements OnInit, AfterViewInit {\r\n  @ViewChild('username', { static: false })\r\n  username!: ElementRef;\r\n\r\n  authenticationError = false;\r\n\r\n  loginForm = new FormGroup({\r\n    username: new FormControl('', { nonNullable: true, validators: [Validators.required] }),\r\n    password: new FormControl('', { nonNullable: true, validators: [Validators.required] }),\r\n    rememberMe: new FormControl(false, { nonNullable: true, validators: [Validators.required] }),\r\n  });\r\n\r\n  constructor(\r\n    private accountService: AccountService,\r\n    private loginService: LoginService,\r\n    private router: Router,\r\n    private localStorageService: LocalStorageService,\r\n    private deviceTokenService: DeviceTokenService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    // if already authenticated then navigate to home page\r\n    this.accountService.identity().subscribe(() => {\r\n      if (this.accountService.isAuthenticated()) {\r\n        this.router.navigate(['']);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.username.nativeElement.focus();\r\n  }\r\n\r\n  login(): void {\r\n    const tokenInLocalStorage: string | null = this.localStorageService.retrieve('deviceToken');\r\n\r\n    this.loginService.login(this.loginForm.getRawValue()).subscribe({\r\n      next: () => {\r\n        const deviceToken: IDeviceToken = new DeviceToken(null, tokenInLocalStorage!!);\r\n        this.deviceTokenService.create(deviceToken).subscribe({\r\n          next: () => {\r\n            console.log('save success');\r\n          },\r\n        });\r\n        this.authenticationError = false;\r\n        if (!this.router.getCurrentNavigation()) {\r\n          // There were no routing during login (eg from navigationToStoredUrl)\r\n          this.router.navigate(['']);\r\n        }\r\n      },\r\n      error: () => (this.authenticationError = true),\r\n    });\r\n  }\r\n}\r\n","<div>\n  <div class=\"d-flex justify-content-center\">\n    <div class=\"col-lg-6 col-md-8 col-sm-10\">\n      <h1 jhiTranslate=\"login.title\" data-cy=\"loginTitle\">Sign in</h1>\n      <div class=\"alert alert-danger\" *ngIf=\"authenticationError\" jhiTranslate=\"login.messages.error.authentication\" data-cy=\"loginError\">\n        <strong>Failed to sign in!</strong> Please check your credentials and try again.\n      </div>\n      <form class=\"form\" role=\"form\" (ngSubmit)=\"login()\" [formGroup]=\"loginForm\">\n        <div class=\"mb-3\">\n          <label class=\"username-label\" for=\"username\" jhiTranslate=\"global.form.username.label\">Username</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            name=\"username\"\n            id=\"username\"\n            placeholder=\"{{ 'global.form.username.placeholder' | translate }}\"\n            formControlName=\"username\"\n            #username\n            data-cy=\"username\"\n          />\n        </div>\n\n        <div class=\"mb-3\">\n          <label for=\"password\" jhiTranslate=\"login.form.password\">Password</label>\n          <input\n            type=\"password\"\n            class=\"form-control\"\n            name=\"password\"\n            id=\"password\"\n            placeholder=\"{{ 'login.form.password.placeholder' | translate }}\"\n            formControlName=\"password\"\n            data-cy=\"password\"\n          />\n        </div>\n\n        <div class=\"form-check\">\n          <label class=\"form-check-label\" for=\"rememberMe\">\n            <input class=\"form-check-input\" type=\"checkbox\" name=\"rememberMe\" id=\"rememberMe\" formControlName=\"rememberMe\" />\n            <span jhiTranslate=\"login.form.rememberme\">Remember me</span>\n          </label>\n        </div>\n\n        <button type=\"submit\" class=\"btn btn-primary\" jhiTranslate=\"login.form.button\" data-cy=\"submit\">Sign in</button>\n      </form>\n      <div class=\"mt-3 alert alert-warning\">\n        <a class=\"alert-link\" routerLink=\"/account/reset/request\" jhiTranslate=\"login.password.forgot\" data-cy=\"forgetYourPasswordSelector\"\n          >Did you forget your password?</a\n        >\n      </div>\n\n      <div class=\"alert alert-warning\">\n        <span jhiTranslate=\"global.messages.info.register.noaccount\">You don't have an account yet?</span>\n        <a class=\"alert-link\" routerLink=\"/account/register\" jhiTranslate=\"global.messages.info.register.link\">Register a new account</a>\n      </div>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { SharedModule } from 'app/shared/shared.module';\nimport { LOGIN_ROUTE } from './login.route';\nimport { LoginComponent } from './login.component';\n\n@NgModule({\n  imports: [SharedModule, RouterModule.forChild([LOGIN_ROUTE])],\n  declarations: [LoginComponent],\n})\nexport class LoginModule {}\n","import { Route } from '@angular/router';\n\nimport { LoginComponent } from './login.component';\n\nexport const LOGIN_ROUTE: Route = {\n  path: '',\n  component: LoginComponent,\n  data: {\n    pageTitle: 'login.title',\n  },\n};\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}